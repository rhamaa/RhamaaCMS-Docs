{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RhamaaCMS Documentation","text":"<p>Selamat datang di dokumentasi RhamaaCMS! Template proyek ini dirancang untuk membuat build Wagtail dengan cepat, ditujukan untuk developer yang ingin memulai pengembangan situs Wagtail menggunakan <code>wagtail start --template=</code>.</p>"},{"location":"#apa-itu-rhamaacms","title":"Apa itu RhamaaCMS?","text":"<p>RhamaaCMS adalah template Wagtail yang dilengkapi dengan:</p> <ul> <li>\u2728 Halaman pre-defined - Struktur halaman siap pakai</li> <li>\ud83e\uddf1 Blok konten - Komponen yang dapat digunakan kembali</li> <li>\u26a1 Fungsionalitas lengkap - Fitur-fitur essential sudah terintegrasi</li> <li>\ud83d\udce6 Data fixtures - Data contoh untuk memulai dengan cepat</li> </ul>"},{"location":"#mulai-cepat","title":"Mulai Cepat","text":"<p>Ingin langsung memulai? Ikuti langkah-langkah berikut:</p> <ol> <li> <p>Pastikan Python 3 terinstall <pre><code>python --version\n</code></pre></p> </li> <li> <p>Buat virtual environment <pre><code>python -m venv myproject/env\nsource myproject/env/bin/activate\n</code></pre></p> </li> <li> <p>Install Wagtail <pre><code>pip install wagtail\n</code></pre></p> </li> <li> <p>Buat proyek dengan template RhamaaCMS <pre><code>wagtail start --template=https://github.com/rhamaa/RhamaaCMS/archive/refs/heads/main.zip myproject .\n</code></pre></p> </li> <li> <p>Install dependencies dan jalankan <pre><code>pip install -r requirements.txt\nmake load-data\nmake start\n</code></pre></p> </li> </ol> <p>Setelah server berjalan, buka <code>localhost:8000</code> untuk melihat situs dan <code>localhost:8000/admin</code> untuk admin panel.</p> <p>Kredensial Default</p> <ul> <li>Username: <code>rhamaa</code></li> <li>Password: <code>admin</code></li> </ul>"},{"location":"#navigasi-dokumentasi","title":"Navigasi Dokumentasi","text":"<ul> <li>Memulai - Panduan instalasi lengkap</li> <li>Panduan Penggunaan - Cara menggunakan RhamaaCMS</li> <li>Deployment - Deploy ke berbagai platform</li> <li>Pengembangan - Kontribusi dan pengembangan</li> </ul>"},{"location":"#dukungan","title":"Dukungan","text":"<p>Jika Anda mengalami masalah atau memiliki saran untuk perbaikan, jangan ragu untuk berkontribusi atau membuka issue di GitHub repository.</p> <p>Happy coding dengan Wagtail! \ud83d\ude80</p>"},{"location":"faq/","title":"FAQ (Frequently Asked Questions)","text":"<p>Kumpulan pertanyaan yang sering diajukan tentang RhamaaCMS beserta jawabannya.</p>"},{"location":"faq/#instalasi-dan-setup","title":"Instalasi dan Setup","text":""},{"location":"faq/#q-versi-python-apa-yang-didukung-rhamaacms","title":"Q: Versi Python apa yang didukung RhamaaCMS?","text":"<p>A: RhamaaCMS mendukung Python 3.8 ke atas. Kami merekomendasikan menggunakan Python 3.11 untuk performa terbaik. Pastikan versi Python Anda kompatibel dengan versi Wagtail yang digunakan.</p>"},{"location":"faq/#q-apakah-saya-harus-menggunakan-virtual-environment","title":"Q: Apakah saya harus menggunakan virtual environment?","text":"<p>A: Ya, sangat disarankan menggunakan virtual environment untuk mengisolasi dependencies proyek. Ini mencegah konflik dengan package Python lain di sistem Anda.</p>"},{"location":"faq/#q-bagaimana-cara-mengatasi-error-wagtail-command-not-found","title":"Q: Bagaimana cara mengatasi error \"wagtail command not found\"?","text":"<p>A: Pastikan: 1. Virtual environment sudah aktif 2. Wagtail sudah terinstall: <code>pip install wagtail</code> 3. PATH environment variable sudah benar</p>"},{"location":"faq/#q-apakah-bisa-menggunakan-database-selain-sqlite","title":"Q: Apakah bisa menggunakan database selain SQLite?","text":"<p>A: Ya, RhamaaCMS mendukung PostgreSQL, MySQL, dan database lain yang didukung Django. Update konfigurasi di <code>settings/base.py</code> sesuai database pilihan Anda.</p>"},{"location":"faq/#penggunaan-dan-development","title":"Penggunaan dan Development","text":""},{"location":"faq/#q-bagaimana-cara-menambah-halaman-baru","title":"Q: Bagaimana cara menambah halaman baru?","text":"<p>A:  1. Buat model page baru di <code>models.py</code> 2. Buat template di folder <code>templates/</code> 3. Jalankan <code>makemigrations</code> dan <code>migrate</code> 4. Tambahkan halaman melalui admin panel</p>"},{"location":"faq/#q-bagaimana-cara-membuat-custom-block","title":"Q: Bagaimana cara membuat custom block?","text":"<p>A: Buat class yang inherit dari <code>blocks.StructBlock</code>:</p> <pre><code>class CustomBlock(blocks.StructBlock):\n    title = blocks.CharBlock()\n    content = blocks.RichTextBlock()\n\n    class Meta:\n        template = 'blocks/custom_block.html'\n</code></pre>"},{"location":"faq/#q-apakah-bisa-mengubah-tema-admin-wagtail","title":"Q: Apakah bisa mengubah tema admin Wagtail?","text":"<p>A: Ya, Anda bisa mengkustomisasi admin interface dengan: 1. Override template admin 2. Menambah custom CSS/JS 3. Menggunakan third-party packages seperti <code>wagtail-admin-theme</code></p>"},{"location":"faq/#q-bagaimana-cara-backup-data","title":"Q: Bagaimana cara backup data?","text":"<p>A: Gunakan Django management commands: <pre><code># Backup ke JSON\npython manage.py dumpdata &gt; backup.json\n\n# Backup database (PostgreSQL)\npg_dump database_name &gt; backup.sql\n</code></pre></p>"},{"location":"faq/#deployment","title":"Deployment","text":""},{"location":"faq/#q-platform-deployment-mana-yang-direkomendasikan","title":"Q: Platform deployment mana yang direkomendasikan?","text":"<p>A: RhamaaCMS dapat di-deploy ke berbagai platform: - Fly.io - Mudah dan cepat untuk small-medium apps - Divio Cloud - Optimized untuk Django apps - Heroku - Popular dan user-friendly - DigitalOcean - Flexible dan cost-effective - AWS/GCP - Untuk enterprise applications</p>"},{"location":"faq/#q-apakah-perlu-menggunakan-cdn-untuk-static-files","title":"Q: Apakah perlu menggunakan CDN untuk static files?","text":"<p>A: Untuk production, sangat disarankan menggunakan CDN untuk: - Mempercepat loading static files - Mengurangi load server - Meningkatkan user experience</p>"},{"location":"faq/#q-bagaimana-cara-setup-https","title":"Q: Bagaimana cara setup HTTPS?","text":"<p>A: Tergantung platform deployment: - Fly.io/Divio: Otomatis tersedia - Custom server: Gunakan Let's Encrypt atau SSL certificate - Update <code>SECURE_SSL_REDIRECT = True</code> di settings</p>"},{"location":"faq/#q-bagaimana-cara-mengatasi-error-500-di-production","title":"Q: Bagaimana cara mengatasi error 500 di production?","text":"<p>A:  1. Check logs aplikasi 2. Pastikan <code>DEBUG = False</code> 3. Verifikasi <code>ALLOWED_HOSTS</code> sudah benar 4. Check database connection 5. Pastikan static files sudah di-collect</p>"},{"location":"faq/#performance-dan-optimization","title":"Performance dan Optimization","text":""},{"location":"faq/#q-bagaimana-cara-mempercepat-loading-website","title":"Q: Bagaimana cara mempercepat loading website?","text":"<p>A: Beberapa tips optimization: 1. Enable caching (Redis/Memcached) 2. Optimize database queries 3. Compress dan minify static files 4. Gunakan CDN 5. Optimize images 6. Enable gzip compression</p>"},{"location":"faq/#q-apakah-perlu-menggunakan-caching","title":"Q: Apakah perlu menggunakan caching?","text":"<p>A: Ya, untuk production disarankan menggunakan: - Page caching untuk halaman yang jarang berubah - Database caching untuk query yang expensive - Template fragment caching untuk komponen yang berat</p>"},{"location":"faq/#q-bagaimana-cara-monitoring-performance","title":"Q: Bagaimana cara monitoring performance?","text":"<p>A: Gunakan tools seperti: - Django Debug Toolbar (development) - New Relic atau Datadog (production) - Google PageSpeed Insights - GTmetrix untuk web performance</p>"},{"location":"faq/#keamanan","title":"Keamanan","text":""},{"location":"faq/#q-bagaimana-cara-mengamankan-admin-panel","title":"Q: Bagaimana cara mengamankan admin panel?","text":"<p>A:  1. Gunakan password yang kuat 2. Enable two-factor authentication 3. Limit akses berdasarkan IP 4. Regular update dependencies 5. Monitor login attempts</p>"},{"location":"faq/#q-apakah-perlu-ssl-certificate","title":"Q: Apakah perlu SSL certificate?","text":"<p>A: Ya, SSL certificate wajib untuk: - Keamanan data - SEO ranking - User trust - Compliance requirements</p>"},{"location":"faq/#q-bagaimana-cara-backup-yang-aman","title":"Q: Bagaimana cara backup yang aman?","text":"<p>A:  1. Encrypt backup files 2. Store di multiple locations 3. Regular backup schedule 4. Test restore process 5. Limit access ke backup files</p>"},{"location":"faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"faq/#q-website-loading-sangat-lambat-apa-yang-harus-dilakukan","title":"Q: Website loading sangat lambat, apa yang harus dilakukan?","text":"<p>A:  1. Check database queries dengan Django Debug Toolbar 2. Enable caching 3. Optimize images dan static files 4. Check server resources 5. Review third-party integrations</p>"},{"location":"faq/#q-error-template-not-found-bagaimana-mengatasinya","title":"Q: Error \"Template not found\", bagaimana mengatasinya?","text":"<p>A:  1. Check path template di <code>TEMPLATES</code> setting 2. Pastikan nama file template benar 3. Verifikasi struktur folder templates 4. Check case sensitivity (Linux/macOS)</p>"},{"location":"faq/#q-bagaimana-cara-debug-error-di-production","title":"Q: Bagaimana cara debug error di production?","text":"<p>A:  1. Check application logs 2. Enable logging untuk specific modules 3. Use error tracking tools (Sentry) 4. Reproduce error di staging environment</p>"},{"location":"faq/#q-media-files-tidak-muncul-di-production","title":"Q: Media files tidak muncul di production?","text":"<p>A:  1. Check <code>MEDIA_URL</code> dan <code>MEDIA_ROOT</code> settings 2. Pastikan web server serve media files 3. Untuk cloud storage, check credentials 4. Verify file permissions</p>"},{"location":"faq/#customization","title":"Customization","text":""},{"location":"faq/#q-bagaimana-cara-mengubah-tampilan-homepage","title":"Q: Bagaimana cara mengubah tampilan homepage?","text":"<p>A:  1. Edit model <code>HomePage</code> di <code>home/models.py</code> 2. Update template <code>home/home_page.html</code> 3. Modify CSS di static files 4. Jalankan migrations jika ada perubahan model</p>"},{"location":"faq/#q-apakah-bisa-menambah-field-custom-ke-page","title":"Q: Apakah bisa menambah field custom ke page?","text":"<p>A: Ya, tambahkan field di model page:</p> <pre><code>class HomePage(Page):\n    custom_field = models.CharField(max_length=255)\n\n    content_panels = Page.content_panels + [\n        FieldPanel('custom_field'),\n    ]\n</code></pre>"},{"location":"faq/#q-bagaimana-cara-membuat-menu-navigation-custom","title":"Q: Bagaimana cara membuat menu navigation custom?","text":"<p>A:  1. Buat model untuk menu items 2. Register di admin 3. Create template tag untuk render menu 4. Include di base template</p>"},{"location":"faq/#integrasi","title":"Integrasi","text":""},{"location":"faq/#q-apakah-bisa-integrasi-dengan-api-external","title":"Q: Apakah bisa integrasi dengan API external?","text":"<p>A: Ya, Anda bisa: 1. Buat service classes untuk API calls 2. Use Django REST framework untuk API endpoints 3. Implement caching untuk API responses 4. Handle error dan timeout dengan baik</p>"},{"location":"faq/#q-bagaimana-cara-integrasi-dengan-payment-gateway","title":"Q: Bagaimana cara integrasi dengan payment gateway?","text":"<p>A:  1. Install package yang sesuai (stripe, paypal, dll) 2. Buat models untuk orders/transactions 3. Implement webhook handlers 4. Add security measures</p>"},{"location":"faq/#q-apakah-mendukung-multi-language","title":"Q: Apakah mendukung multi-language?","text":"<p>A: Ya, gunakan: 1. Django internationalization (i18n) 2. Wagtail localization 3. <code>wagtail-localize</code> package untuk translation management</p>"},{"location":"faq/#support","title":"Support","text":""},{"location":"faq/#q-dimana-bisa-mendapat-bantuan-jika-ada-masalah","title":"Q: Dimana bisa mendapat bantuan jika ada masalah?","text":"<p>A:  1. Dokumentasi: Baca dokumentasi lengkap 2. GitHub Issues: Report bugs atau request features 3. Wagtail Community: Slack channel dan forum 4. Stack Overflow: Tag dengan <code>wagtail</code> dan <code>django</code></p>"},{"location":"faq/#q-bagaimana-cara-berkontribusi-ke-rhamaacms","title":"Q: Bagaimana cara berkontribusi ke RhamaaCMS?","text":"<p>A:  1. Fork repository di GitHub 2. Buat branch untuk feature/bugfix 3. Follow coding standards 4. Submit pull request dengan deskripsi yang jelas 5. Baca panduan kontribusi</p>"},{"location":"faq/#q-apakah-ada-roadmap-development","title":"Q: Apakah ada roadmap development?","text":"<p>A: Ya, check GitHub repository untuk: - Planned features - Current milestones - Issue labels untuk priority</p> <p>Tidak menemukan jawaban yang Anda cari? </p> <p>Silakan buka issue di GitHub repository atau hubungi komunitas untuk bantuan lebih lanjut.</p>"},{"location":"deployment/divio/","title":"Deploy ke Divio Cloud","text":"<p>Divio Cloud adalah platform cloud yang dioptimalkan untuk aplikasi Django dan menyediakan environment yang mudah untuk deployment RhamaaCMS.</p>"},{"location":"deployment/divio/#persiapan","title":"Persiapan","text":""},{"location":"deployment/divio/#1-akun-divio","title":"1. Akun Divio","text":"<p>Buat akun di Divio Control Panel jika belum memiliki.</p>"},{"location":"deployment/divio/#2-repository-git","title":"2. Repository Git","text":"<p>Pastikan proyek RhamaaCMS Anda sudah di-push ke Git repository (GitHub, GitLab, atau Bitbucket).</p>"},{"location":"deployment/divio/#quick-deploy","title":"Quick Deploy","text":"<p>Untuk deployment cepat, gunakan tombol deploy:</p> <p></p>"},{"location":"deployment/divio/#manual-deployment","title":"Manual Deployment","text":""},{"location":"deployment/divio/#1-setup-lokal","title":"1. Setup Lokal","text":"<p>Ikuti panduan instalasi untuk setup proyek lokal terlebih dahulu.</p>"},{"location":"deployment/divio/#2-push-ke-repository","title":"2. Push ke Repository","text":"<p>Upload proyek ke Git provider pilihan Anda:</p> <pre><code>git init\ngit add .\ngit commit -m \"Initial commit\"\ngit remote add origin https://github.com/username/your-repo.git\ngit push -u origin main\n</code></pre>"},{"location":"deployment/divio/#3-buat-aplikasi-baru","title":"3. Buat Aplikasi Baru","text":"<ol> <li>Login ke Divio Control Panel</li> <li>Klik \"Create new application\"</li> <li>Pilih \"I already have a repository\"</li> <li>Connect Git provider Anda</li> <li>Pilih repository RhamaaCMS</li> <li>Klik \"Next\"</li> </ol>"},{"location":"deployment/divio/#4-konfigurasi-aplikasi","title":"4. Konfigurasi Aplikasi","text":"<ol> <li>Berikan nama aplikasi yang sesuai</li> <li>Pilih plan \"Free Trial\" untuk testing</li> <li>Klik \"Create application\"</li> </ol> <p>Divio akan membuat dua environment: - Test - untuk testing dan development - Live - untuk production</p>"},{"location":"deployment/divio/#konfigurasi-database","title":"Konfigurasi Database","text":""},{"location":"deployment/divio/#1-tambah-database-service","title":"1. Tambah Database Service","text":"<ol> <li>Buka aplikasi di Divio Control Panel</li> <li>Pergi ke tab \"Services\"</li> <li>Klik \"Add service\"</li> <li>Pilih \"PostgreSQL\" atau \"MySQL\"</li> <li>Konfigurasi sesuai kebutuhan</li> </ol>"},{"location":"deployment/divio/#2-update-settings","title":"2. Update Settings","text":"<p>Buat file <code>settings/divio.py</code>:</p> <pre><code>from .base import *\nimport os\n\n# Database configuration\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.environ.get('DATABASE_NAME'),\n        'USER': os.environ.get('DATABASE_USER'),\n        'PASSWORD': os.environ.get('DATABASE_PASSWORD'),\n        'HOST': os.environ.get('DATABASE_HOST'),\n        'PORT': os.environ.get('DATABASE_PORT', '5432'),\n    }\n}\n\n# Static files\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n\n# Security settings\nALLOWED_HOSTS = [\n    '.divio-media.net',\n    '.divio-media.org',\n    '.divio.app',\n    os.environ.get('DOMAIN_ALIASES', '').split(','),\n]\n\n# Remove empty strings\nALLOWED_HOSTS = [host for host in ALLOWED_HOSTS if host]\n\nDEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'\n\n# CSRF settings\nCSRF_TRUSTED_ORIGINS = [\n    'https://' + host for host in ALLOWED_HOSTS if host\n]\n</code></pre>"},{"location":"deployment/divio/#environment-variables","title":"Environment Variables","text":""},{"location":"deployment/divio/#1-set-required-variables","title":"1. Set Required Variables","text":"<p>Di Divio Control Panel, pergi ke \"Env Variables\" dan tambahkan:</p> <pre><code>SECRET_KEY=your-secret-key-here\nDJANGO_SETTINGS_MODULE=myproject.settings.divio\nDEBUG=False\n</code></pre>"},{"location":"deployment/divio/#2-generate-secret-key","title":"2. Generate Secret Key","text":"<p>Gunakan Django Secret Key Generator untuk generate secret key yang aman.</p>"},{"location":"deployment/divio/#release-commands","title":"Release Commands","text":""},{"location":"deployment/divio/#1-automatic-migrations","title":"1. Automatic Migrations","text":"<p>Di \"Settings\" aplikasi, tambahkan \"Release command\":</p> <pre><code>python manage.py migrate\n</code></pre>"},{"location":"deployment/divio/#2-collect-static-files","title":"2. Collect Static Files","text":"<p>Tambahkan command tambahan:</p> <pre><code>python manage.py collectstatic --noinput\n</code></pre>"},{"location":"deployment/divio/#3-load-initial-data-opsional","title":"3. Load Initial Data (Opsional)","text":"<p>Untuk load data dummy:</p> <pre><code>python manage.py loaddata fixtures/initial_data.json\n</code></pre>"},{"location":"deployment/divio/#media-storage","title":"Media Storage","text":""},{"location":"deployment/divio/#1-tambah-object-storage","title":"1. Tambah Object Storage","text":"<ol> <li>Pergi ke tab \"Services\"</li> <li>Klik \"Add service\"</li> <li>Pilih \"Object Storage\"</li> <li>Konfigurasi bucket name dan region</li> </ol>"},{"location":"deployment/divio/#2-update-settings-untuk-media","title":"2. Update Settings untuk Media","text":"<p>Update <code>settings/divio.py</code>:</p> <pre><code># Media storage settings\nif 'DEFAULT_STORAGE_DSN' in os.environ:\n    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n\n    # Parse storage DSN\n    import dj_database_url\n    storage_config = dj_database_url.parse(os.environ['DEFAULT_STORAGE_DSN'])\n\n    AWS_ACCESS_KEY_ID = storage_config['USER']\n    AWS_SECRET_ACCESS_KEY = storage_config['PASSWORD']\n    AWS_STORAGE_BUCKET_NAME = storage_config['NAME']\n    AWS_S3_ENDPOINT_URL = f\"https://{storage_config['HOST']}\"\n    AWS_S3_CUSTOM_DOMAIN = f\"{storage_config['NAME']}.{storage_config['HOST']}\"\n    AWS_DEFAULT_ACL = 'public-read'\n</code></pre>"},{"location":"deployment/divio/#3-install-storage-dependencies","title":"3. Install Storage Dependencies","text":"<p>Tambahkan ke <code>requirements.txt</code>:</p> <pre><code>django-storages[boto3]&gt;=1.13\n</code></pre>"},{"location":"deployment/divio/#deployment","title":"Deployment","text":""},{"location":"deployment/divio/#1-deploy-ke-test-environment","title":"1. Deploy ke Test Environment","text":"<ol> <li>Pergi ke tab \"Environments\"</li> <li>Klik \"Deploy\" pada Test environment</li> <li>Tunggu proses deployment selesai</li> <li>Akses aplikasi menggunakan \"Env URL\"</li> </ol>"},{"location":"deployment/divio/#2-test-aplikasi","title":"2. Test Aplikasi","text":"<ol> <li>Buka URL test environment</li> <li>Verifikasi semua fungsi bekerja dengan baik</li> <li>Test admin panel di <code>/admin</code></li> <li>Upload beberapa media files untuk test storage</li> </ol>"},{"location":"deployment/divio/#3-deploy-ke-live-environment","title":"3. Deploy ke Live Environment","text":"<p>Setelah testing berhasil:</p> <ol> <li>Klik \"Deploy\" pada Live environment</li> <li>Tunggu deployment selesai</li> <li>Akses aplikasi production</li> </ol>"},{"location":"deployment/divio/#custom-domain","title":"Custom Domain","text":""},{"location":"deployment/divio/#1-tambah-domain","title":"1. Tambah Domain","text":"<ol> <li>Pergi ke \"Settings\" aplikasi</li> <li>Tambahkan domain di \"Domains\" section</li> <li>Konfigurasi DNS record:</li> </ol> <pre><code>CNAME yourdomain.com your-app.divio.app\n</code></pre>"},{"location":"deployment/divio/#2-ssl-certificate","title":"2. SSL Certificate","text":"<p>Divio otomatis menyediakan SSL certificate untuk custom domain.</p>"},{"location":"deployment/divio/#database-management","title":"Database Management","text":""},{"location":"deployment/divio/#1-backup-database","title":"1. Backup Database","text":"<pre><code># Via Divio CLI\ndivio app backup create\n\n# Manual backup\ndivio app shell\npg_dump $DATABASE_URL &gt; backup.sql\n</code></pre>"},{"location":"deployment/divio/#2-restore-database","title":"2. Restore Database","text":"<pre><code>divio app shell\npsql $DATABASE_URL &lt; backup.sql\n</code></pre>"},{"location":"deployment/divio/#3-run-commands","title":"3. Run Commands","text":"<pre><code># Access shell\ndivio app shell\n\n# Run Django commands\npython manage.py migrate\npython manage.py createsuperuser\npython manage.py collectstatic\n</code></pre>"},{"location":"deployment/divio/#monitoring","title":"Monitoring","text":""},{"location":"deployment/divio/#1-application-logs","title":"1. Application Logs","text":"<pre><code># Via Divio CLI\ndivio app logs\n\n# Via Control Panel\n# Pergi ke \"Logs\" tab\n</code></pre>"},{"location":"deployment/divio/#2-performance-monitoring","title":"2. Performance Monitoring","text":"<p>Divio menyediakan basic monitoring di Control Panel: - CPU usage - Memory usage - Request metrics - Error rates</p>"},{"location":"deployment/divio/#troubleshooting","title":"Troubleshooting","text":""},{"location":"deployment/divio/#build-errors","title":"Build Errors","text":"<p>Check build logs: 1. Pergi ke \"Environments\" tab 2. Klik pada deployment yang gagal 3. Review build logs</p> <p>Common issues: - Missing dependencies in <code>requirements.txt</code> - Python version compatibility - Static files configuration</p>"},{"location":"deployment/divio/#database-connection-errors","title":"Database Connection Errors","text":"<p>Check environment variables: 1. Verify database service is running 2. Check database credentials in env variables 3. Test connection in shell</p>"},{"location":"deployment/divio/#static-files-not-loading","title":"Static Files Not Loading","text":"<p>Solutions: 1. Run <code>collectstatic</code> command 2. Check <code>STATIC_URL</code> and <code>STATIC_ROOT</code> settings 3. Verify web server configuration</p>"},{"location":"deployment/divio/#media-files-issues","title":"Media Files Issues","text":"<p>Check object storage: 1. Verify storage service is configured 2. Check storage credentials 3. Test file upload in admin</p>"},{"location":"deployment/divio/#scaling","title":"Scaling","text":""},{"location":"deployment/divio/#1-vertical-scaling","title":"1. Vertical Scaling","text":"<p>Upgrade plan untuk lebih banyak resources: - CPU cores - Memory - Storage</p>"},{"location":"deployment/divio/#2-horizontal-scaling","title":"2. Horizontal Scaling","text":"<p>Untuk high-traffic applications: - Load balancer - Multiple instances - Database read replicas</p>"},{"location":"deployment/divio/#cost-optimization","title":"Cost Optimization","text":""},{"location":"deployment/divio/#1-resource-monitoring","title":"1. Resource Monitoring","text":"<p>Monitor usage di Control Panel: - CPU utilization - Memory usage - Storage consumption - Bandwidth usage</p>"},{"location":"deployment/divio/#2-optimization-tips","title":"2. Optimization Tips","text":"<ul> <li>Optimize database queries</li> <li>Use caching (Redis/Memcached)</li> <li>Compress static files</li> <li>Optimize images</li> </ul>"},{"location":"deployment/divio/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah berhasil deploy ke Divio:</p> <ol> <li>Setup monitoring dan alerting</li> <li>Konfigurasi backup schedule</li> <li>Implementasi CI/CD pipeline</li> <li>Performance optimization</li> </ol> <p>Untuk deployment ke platform lain, lihat panduan Fly.io atau Server Lainnya.</p>"},{"location":"deployment/flyio/","title":"Deploy ke Fly.io","text":"<p>Fly.io adalah platform cloud yang memudahkan deployment aplikasi dengan konfigurasi minimal. Panduan ini akan membantu Anda deploy RhamaaCMS ke Fly.io.</p>"},{"location":"deployment/flyio/#persiapan","title":"Persiapan","text":""},{"location":"deployment/flyio/#1-install-fly-cli","title":"1. Install Fly CLI","text":"macOSLinuxWindows <pre><code>brew install flyctl\n</code></pre> <pre><code>curl -L https://fly.io/install.sh | sh\n</code></pre> <pre><code>iwr https://fly.io/install.ps1 -useb | iex\n</code></pre>"},{"location":"deployment/flyio/#2-buat-akun-flyio","title":"2. Buat Akun Fly.io","text":"<p>Jika belum memiliki akun, daftar di fly.io:</p> <pre><code>fly auth signup\n</code></pre> <p>Atau login jika sudah memiliki akun:</p> <pre><code>fly auth login\n</code></pre>"},{"location":"deployment/flyio/#konfigurasi-proyek","title":"Konfigurasi Proyek","text":""},{"location":"deployment/flyio/#1-file-flytoml","title":"1. File fly.toml","text":"<p>RhamaaCMS sudah menyediakan file <code>fly.toml</code> yang dikonfigurasi untuk deployment:</p> <pre><code># fly.toml\napp = \"your-app-name\"\nprimary_region = \"sin\"\n\n[build]\n  builder = \"paketobuildpacks/builder:base\"\n\n[env]\n  PORT = \"8000\"\n  DJANGO_SETTINGS_MODULE = \"myproject.settings.production\"\n\n[http_service]\n  internal_port = 8000\n  force_https = true\n  auto_stop_machines = true\n  auto_start_machines = true\n  min_machines_running = 0\n  processes = [\"app\"]\n\n[[http_service.checks]]\n  grace_period = \"10s\"\n  interval = \"30s\"\n  method = \"GET\"\n  timeout = \"5s\"\n  path = \"/health/\"\n\n[mounts]\n  source = \"data\"\n  destination = \"/app/data\"\n\n[[statics]]\n  guest_path = \"/app/staticfiles\"\n  url_prefix = \"/static/\"\n</code></pre>"},{"location":"deployment/flyio/#2-dockerfile","title":"2. Dockerfile","text":"<p>Pastikan Dockerfile sudah sesuai untuk production:</p> <pre><code>FROM python:3.11-slim\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\n\n# Set work directory\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    build-essential \\\n    libpq-dev \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Install Python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy project\nCOPY . .\n\n# Collect static files\nRUN python manage.py collectstatic --noinput\n\n# Create data directory for SQLite\nRUN mkdir -p /app/data\n\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"myproject.wsgi:application\"]\n</code></pre>"},{"location":"deployment/flyio/#3-production-settings","title":"3. Production Settings","text":"<p>Update file <code>settings/production.py</code>:</p> <pre><code>from .base import *\nimport os\n\nDEBUG = False\n\n# Allowed hosts\nALLOWED_HOSTS = [\n    '.fly.dev',\n    'your-app-name.fly.dev',\n]\n\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': '/app/data/db.sqlite3',\n    }\n}\n\n# Static files\nSTATIC_ROOT = '/app/staticfiles'\nSTATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'\n\n# Media files\nMEDIA_ROOT = '/app/data/media'\n\n# Security settings\nSECURE_SSL_REDIRECT = True\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\nSECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\n\n# CSRF settings\nCSRF_TRUSTED_ORIGINS = [\n    'https://your-app-name.fly.dev',\n]\n\n# Logging\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'root': {\n        'handlers': ['console'],\n        'level': 'INFO',\n    },\n}\n</code></pre>"},{"location":"deployment/flyio/#deployment-process","title":"Deployment Process","text":""},{"location":"deployment/flyio/#1-launch-application","title":"1. Launch Application","text":"<p>Di root directory proyek, jalankan:</p> <pre><code>fly launch\n</code></pre> <p>Saat ditanya tentang copying existing <code>fly.toml</code>, pilih \"Yes\":</p> <pre><code>? Would you like to copy its configuration to the new app? Yes\n</code></pre> <p>Penting</p> <p>Memilih \"No\" akan menyebabkan deployment gagal karena konfigurasi khusus diperlukan.</p>"},{"location":"deployment/flyio/#2-konfigurasi-region","title":"2. Konfigurasi Region","text":"<p>Jika ingin mengubah region, pilih \"Yes\" saat ditanya:</p> <pre><code>? Would you like to tweak these settings before proceeding? Yes\n</code></pre> <p>Kemudian pilih region yang diinginkan di browser.</p>"},{"location":"deployment/flyio/#3-set-secret-key","title":"3. Set Secret Key","text":"<p>Generate dan set secret key untuk Django:</p> <pre><code># Generate secret key\npython -c \"from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())\"\n\n# Set secret key\nfly secrets set SECRET_KEY=\"your-generated-secret-key\"\n</code></pre>"},{"location":"deployment/flyio/#4-deploy-application","title":"4. Deploy Application","text":"<pre><code>fly deploy\n</code></pre>"},{"location":"deployment/flyio/#5-create-volume-opsional","title":"5. Create Volume (Opsional)","text":"<p>Untuk persistent storage:</p> <pre><code>fly volumes create data --size 1\n</code></pre>"},{"location":"deployment/flyio/#6-load-initial-data","title":"6. Load Initial Data","text":"<p>Setelah deployment berhasil, load data dummy:</p> <pre><code>fly ssh console -u wagtail -C \"./manage.py load_initial_data\"\n</code></pre> <p>Troubleshooting SSH</p> <p>Jika mendapat error \"error connecting to SSH server\", kemungkinan <code>fly.toml</code> tidak terbaca dengan benar. Hapus aplikasi dan ulangi dari awal.</p>"},{"location":"deployment/flyio/#post-deployment","title":"Post-Deployment","text":""},{"location":"deployment/flyio/#1-akses-aplikasi","title":"1. Akses Aplikasi","text":"<p>Setelah deployment selesai, akses aplikasi di URL yang diberikan:</p> <pre><code>https://your-app-name.fly.dev\n</code></pre>"},{"location":"deployment/flyio/#2-ganti-password-admin","title":"2. Ganti Password Admin","text":"<p>Login ke admin panel dan segera ganti password default:</p> <ol> <li>Buka <code>https://your-app-name.fly.dev/admin</code></li> <li>Login dengan kredensial default</li> <li>Ganti password di user settings</li> </ol>"},{"location":"deployment/flyio/#3-konfigurasi-domain-custom-opsional","title":"3. Konfigurasi Domain Custom (Opsional)","text":"<p>Untuk menggunakan domain sendiri:</p> <pre><code># Add custom domain\nfly certs add yourdomain.com\n\n# Check certificate status\nfly certs show yourdomain.com\n</code></pre> <p>Update DNS record domain Anda: <pre><code>CNAME yourdomain.com your-app-name.fly.dev\n</code></pre></p>"},{"location":"deployment/flyio/#monitoring-dan-maintenance","title":"Monitoring dan Maintenance","text":""},{"location":"deployment/flyio/#1-view-logs","title":"1. View Logs","text":"<pre><code>fly logs\n</code></pre>"},{"location":"deployment/flyio/#2-check-status","title":"2. Check Status","text":"<pre><code>fly status\n</code></pre>"},{"location":"deployment/flyio/#3-scale-application","title":"3. Scale Application","text":"<pre><code># Scale to 2 instances\nfly scale count 2\n\n# Scale memory\nfly scale memory 512\n</code></pre>"},{"location":"deployment/flyio/#4-update-application","title":"4. Update Application","text":"<p>Untuk update kode:</p> <pre><code>fly deploy\n</code></pre>"},{"location":"deployment/flyio/#database-management","title":"Database Management","text":""},{"location":"deployment/flyio/#1-backup-database","title":"1. Backup Database","text":"<pre><code>fly ssh console -C \"sqlite3 /app/data/db.sqlite3 .dump\" &gt; backup.sql\n</code></pre>"},{"location":"deployment/flyio/#2-restore-database","title":"2. Restore Database","text":"<pre><code>cat backup.sql | fly ssh console -C \"sqlite3 /app/data/db.sqlite3\"\n</code></pre>"},{"location":"deployment/flyio/#3-run-migrations","title":"3. Run Migrations","text":"<pre><code>fly ssh console -C \"./manage.py migrate\"\n</code></pre>"},{"location":"deployment/flyio/#troubleshooting","title":"Troubleshooting","text":""},{"location":"deployment/flyio/#application-wont-start","title":"Application Won't Start","text":"<p>Check logs: <pre><code>fly logs\n</code></pre></p> <p>Common issues: - Missing SECRET_KEY - Database connection errors - Static files not collected</p>"},{"location":"deployment/flyio/#ssh-connection-issues","title":"SSH Connection Issues","text":"<p>Error: \"error connecting to SSH server\"</p> <p>Solutions: 1. Check if <code>fly.toml</code> was copied correctly 2. Verify application is running: <code>fly status</code> 3. Try redeploying: <code>fly deploy</code></p>"},{"location":"deployment/flyio/#database-errors","title":"Database Errors","text":"<p>Error: \"no such table\"</p> <p>Solution: <pre><code>fly ssh console -C \"./manage.py migrate\"\n</code></pre></p>"},{"location":"deployment/flyio/#static-files-not-loading","title":"Static Files Not Loading","text":"<p>Check static files configuration: <pre><code>fly ssh console -C \"./manage.py collectstatic --noinput\"\n</code></pre></p>"},{"location":"deployment/flyio/#cost-optimization","title":"Cost Optimization","text":""},{"location":"deployment/flyio/#1-auto-stop-machines","title":"1. Auto-stop Machines","text":"<p>Konfigurasi sudah mengaktifkan auto-stop untuk menghemat biaya:</p> <pre><code>[http_service]\n  auto_stop_machines = true\n  auto_start_machines = true\n  min_machines_running = 0\n</code></pre>"},{"location":"deployment/flyio/#2-monitor-usage","title":"2. Monitor Usage","text":"<pre><code>fly dashboard\n</code></pre>"},{"location":"deployment/flyio/#3-set-resource-limits","title":"3. Set Resource Limits","text":"<pre><code># Set memory limit\nfly scale memory 256\n\n# Set CPU limit\nfly scale vm shared-cpu-1x\n</code></pre>"},{"location":"deployment/flyio/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah berhasil deploy ke Fly.io, Anda dapat:</p> <ol> <li>Setup monitoring dan alerting</li> <li>Konfigurasi backup otomatis</li> <li>Implementasi CI/CD pipeline</li> <li>Optimasi performance</li> </ol> <p>Untuk deployment ke platform lain, lihat panduan Divio Cloud atau Server Lainnya.</p>"},{"location":"deployment/other-servers/","title":"Deploy ke Server Lainnya","text":"<p>Panduan deployment RhamaaCMS ke berbagai platform hosting dan server.</p>"},{"location":"deployment/other-servers/#heroku","title":"Heroku","text":""},{"location":"deployment/other-servers/#persiapan","title":"Persiapan","text":"<ol> <li> <p>Install Heroku CLI <pre><code># macOS\nbrew tap heroku/brew &amp;&amp; brew install heroku\n\n# Ubuntu/Debian\ncurl https://cli-assets.heroku.com/install.sh | sh\n</code></pre></p> </li> <li> <p>Login ke Heroku <pre><code>heroku login\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#konfigurasi","title":"Konfigurasi","text":"<ol> <li> <p>Buat file Procfile <pre><code>web: gunicorn myproject.wsgi:application\nrelease: python manage.py migrate\n</code></pre></p> </li> <li> <p>Update requirements.txt <pre><code>gunicorn&gt;=20.1.0\ndj-database-url&gt;=1.0.0\nwhitenoise&gt;=6.0.0\npsycopg2-binary&gt;=2.9.0\n</code></pre></p> </li> <li> <p>Heroku settings <pre><code># settings/heroku.py\nfrom .base import *\nimport dj_database_url\n\nDEBUG = False\nALLOWED_HOSTS = ['.herokuapp.com']\n\n# Database\nDATABASES = {\n    'default': dj_database_url.config(\n        default='sqlite:///db.sqlite3'\n    )\n}\n\n# Static files\nMIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#deployment","title":"Deployment","text":"<pre><code># Create Heroku app\nheroku create your-app-name\n\n# Set environment variables\nheroku config:set DJANGO_SETTINGS_MODULE=myproject.settings.heroku\nheroku config:set SECRET_KEY=your-secret-key\n\n# Add PostgreSQL addon\nheroku addons:create heroku-postgresql:hobby-dev\n\n# Deploy\ngit push heroku main\n\n# Run migrations\nheroku run python manage.py migrate\n\n# Create superuser\nheroku run python manage.py createsuperuser\n</code></pre>"},{"location":"deployment/other-servers/#digitalocean-app-platform","title":"DigitalOcean App Platform","text":""},{"location":"deployment/other-servers/#konfigurasi_1","title":"Konfigurasi","text":"<ol> <li> <p>Buat file .do/app.yaml <pre><code>name: rhamaacms\nservices:\n- name: web\n  source_dir: /\n  github:\n    repo: your-username/your-repo\n    branch: main\n  run_command: gunicorn --worker-tmp-dir /dev/shm myproject.wsgi:application\n  environment_slug: python\n  instance_count: 1\n  instance_size_slug: basic-xxs\n  envs:\n  - key: DJANGO_SETTINGS_MODULE\n    value: myproject.settings.production\n  - key: SECRET_KEY\n    value: your-secret-key\n    type: SECRET\ndatabases:\n- name: db\n  engine: PG\n  version: \"13\"\n</code></pre></p> </li> <li> <p>Production settings <pre><code># settings/production.py\nimport os\nfrom .base import *\n\nDEBUG = False\nALLOWED_HOSTS = ['.ondigitalocean.app']\n\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv('DATABASE_NAME'),\n        'USER': os.getenv('DATABASE_USER'),\n        'PASSWORD': os.getenv('DATABASE_PASSWORD'),\n        'HOST': os.getenv('DATABASE_HOST'),\n        'PORT': os.getenv('DATABASE_PORT', '5432'),\n    }\n}\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#deployment_1","title":"Deployment","text":"<ol> <li>Connect GitHub repository</li> <li>Configure environment variables</li> <li>Deploy from DigitalOcean dashboard</li> </ol>"},{"location":"deployment/other-servers/#railway","title":"Railway","text":""},{"location":"deployment/other-servers/#konfigurasi_2","title":"Konfigurasi","text":"<ol> <li> <p>Buat file railway.toml <pre><code>[build]\nbuilder = \"nixpacks\"\n\n[deploy]\nstartCommand = \"python manage.py migrate &amp;&amp; gunicorn myproject.wsgi:application\"\n\n[env]\nDJANGO_SETTINGS_MODULE = \"myproject.settings.railway\"\n</code></pre></p> </li> <li> <p>Railway settings <pre><code># settings/railway.py\nfrom .base import *\nimport os\n\nDEBUG = False\nALLOWED_HOSTS = ['.railway.app']\n\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv('PGDATABASE'),\n        'USER': os.getenv('PGUSER'),\n        'PASSWORD': os.getenv('PGPASSWORD'),\n        'HOST': os.getenv('PGHOST'),\n        'PORT': os.getenv('PGPORT', '5432'),\n    }\n}\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#deployment_2","title":"Deployment","text":"<pre><code># Install Railway CLI\nnpm install -g @railway/cli\n\n# Login\nrailway login\n\n# Initialize project\nrailway init\n\n# Add PostgreSQL\nrailway add postgresql\n\n# Deploy\nrailway up\n</code></pre>"},{"location":"deployment/other-servers/#render","title":"Render","text":""},{"location":"deployment/other-servers/#konfigurasi_3","title":"Konfigurasi","text":"<ol> <li> <p>Buat file render.yaml <pre><code>services:\n  - type: web\n    name: rhamaacms\n    env: python\n    buildCommand: \"pip install -r requirements.txt &amp;&amp; python manage.py collectstatic --noinput\"\n    startCommand: \"gunicorn myproject.wsgi:application\"\n    envVars:\n      - key: DJANGO_SETTINGS_MODULE\n        value: myproject.settings.render\n      - key: SECRET_KEY\n        generateValue: true\n      - key: WEB_CONCURRENCY\n        value: 4\n\ndatabases:\n  - name: postgres\n    databaseName: rhamaacms\n    user: rhamaacms\n</code></pre></p> </li> <li> <p>Render settings <pre><code># settings/render.py\nfrom .base import *\nimport dj_database_url\n\nDEBUG = False\nALLOWED_HOSTS = ['.onrender.com']\n\n# Database\nDATABASES = {\n    'default': dj_database_url.config(\n        default='postgresql://localhost/rhamaacms',\n        conn_max_age=600\n    )\n}\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#vps-ubuntu-server","title":"VPS (Ubuntu Server)","text":""},{"location":"deployment/other-servers/#server-setup","title":"Server Setup","text":"<ol> <li> <p>Update system <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre></p> </li> <li> <p>Install dependencies <pre><code>sudo apt install python3 python3-pip python3-venv nginx postgresql postgresql-contrib\n</code></pre></p> </li> <li> <p>Setup PostgreSQL <pre><code>sudo -u postgres createuser --interactive\nsudo -u postgres createdb rhamaacms\n</code></pre></p> </li> <li> <p>Setup application <pre><code># Clone repository\ngit clone https://github.com/your-username/RhamaaCMS.git\ncd RhamaaCMS\n\n# Create virtual environment\npython3 -m venv venv\nsource venv/bin/activate\n\n# Install dependencies\npip install -r requirements.txt\npip install gunicorn\n\n# Setup database\npython manage.py migrate\npython manage.py collectstatic\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#nginx-configuration","title":"Nginx Configuration","text":"<pre><code># /etc/nginx/sites-available/rhamaacms\nserver {\n    listen 80;\n    server_name your-domain.com;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n\n    location /static/ {\n        root /path/to/RhamaaCMS;\n    }\n\n    location /media/ {\n        root /path/to/RhamaaCMS;\n    }\n\n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/path/to/RhamaaCMS/rhamaacms.sock;\n    }\n}\n</code></pre>"},{"location":"deployment/other-servers/#systemd-service","title":"Systemd Service","text":"<pre><code># /etc/systemd/system/rhamaacms.service\n[Unit]\nDescription=RhamaaCMS daemon\nAfter=network.target\n\n[Service]\nUser=www-data\nGroup=www-data\nWorkingDirectory=/path/to/RhamaaCMS\nExecStart=/path/to/RhamaaCMS/venv/bin/gunicorn \\\n          --access-logfile - \\\n          --workers 3 \\\n          --bind unix:/path/to/RhamaaCMS/rhamaacms.sock \\\n          myproject.wsgi:application\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"deployment/other-servers/#ssl-with-lets-encrypt","title":"SSL with Let's Encrypt","text":"<pre><code># Install Certbot\nsudo apt install certbot python3-certbot-nginx\n\n# Get SSL certificate\nsudo certbot --nginx -d your-domain.com\n\n# Auto-renewal\nsudo crontab -e\n# Add: 0 12 * * * /usr/bin/certbot renew --quiet\n</code></pre>"},{"location":"deployment/other-servers/#aws-ec2","title":"AWS EC2","text":""},{"location":"deployment/other-servers/#instance-setup","title":"Instance Setup","text":"<ol> <li>Launch EC2 instance (Ubuntu 20.04 LTS)</li> <li>Configure security groups:</li> <li>HTTP (80)</li> <li>HTTPS (443)</li> <li> <p>SSH (22)</p> </li> <li> <p>Connect and setup <pre><code>ssh -i your-key.pem ubuntu@your-instance-ip\n\n# Follow VPS setup steps above\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#rds-database","title":"RDS Database","text":"<ol> <li>Create RDS PostgreSQL instance</li> <li>Update security groups untuk allow EC2 access</li> <li>Update settings:    <pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'rhamaacms',\n        'USER': 'your-username',\n        'PASSWORD': 'your-password',\n        'HOST': 'your-rds-endpoint',\n        'PORT': '5432',\n    }\n}\n</code></pre></li> </ol>"},{"location":"deployment/other-servers/#s3-for-media-files","title":"S3 for Media Files","text":"<pre><code># settings/aws.py\nAWS_ACCESS_KEY_ID = 'your-access-key'\nAWS_SECRET_ACCESS_KEY = 'your-secret-key'\nAWS_STORAGE_BUCKET_NAME = 'your-bucket-name'\nAWS_S3_REGION_NAME = 'us-east-1'\n\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'\n\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nSTATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'\n</code></pre>"},{"location":"deployment/other-servers/#google-cloud-platform","title":"Google Cloud Platform","text":""},{"location":"deployment/other-servers/#app-engine","title":"App Engine","text":"<ol> <li> <p>Buat file app.yaml <pre><code>runtime: python39\n\nenv_variables:\n  DJANGO_SETTINGS_MODULE: myproject.settings.gcp\n  SECRET_KEY: your-secret-key\n\nhandlers:\n- url: /static\n  static_dir: staticfiles\n\n- url: /.*\n  script: auto\n</code></pre></p> </li> <li> <p>Cloud SQL setup <pre><code># settings/gcp.py\nimport os\nfrom .base import *\n\nif os.getenv('GAE_APPLICATION', None):\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql',\n            'NAME': 'rhamaacms',\n            'USER': 'postgres',\n            'PASSWORD': 'your-password',\n            'HOST': '/cloudsql/your-project:region:instance',\n        }\n    }\n</code></pre></p> </li> <li> <p>Deploy <pre><code>gcloud app deploy\n</code></pre></p> </li> </ol>"},{"location":"deployment/other-servers/#docker-deployment","title":"Docker Deployment","text":""},{"location":"deployment/other-servers/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\n\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\n\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    build-essential \\\n    libpq-dev \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Install Python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy project\nCOPY . .\n\n# Collect static files\nRUN python manage.py collectstatic --noinput\n\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"myproject.wsgi:application\"]\n</code></pre>"},{"location":"deployment/other-servers/#docker-compose","title":"Docker Compose","text":"<pre><code># docker-compose.yml\nversion: '3.8'\n\nservices:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n    environment:\n      - DJANGO_SETTINGS_MODULE=myproject.settings.docker\n      - SECRET_KEY=your-secret-key\n    depends_on:\n      - db\n    volumes:\n      - ./media:/app/media\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_DB=rhamaacms\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\nvolumes:\n  postgres_data:\n</code></pre>"},{"location":"deployment/other-servers/#deployment_3","title":"Deployment","text":"<pre><code># Build and run\ndocker-compose up -d\n\n# Run migrations\ndocker-compose exec web python manage.py migrate\n\n# Create superuser\ndocker-compose exec web python manage.py createsuperuser\n</code></pre>"},{"location":"deployment/other-servers/#monitoring-dan-maintenance","title":"Monitoring dan Maintenance","text":""},{"location":"deployment/other-servers/#health-checks","title":"Health Checks","text":"<pre><code># health/views.py\nfrom django.http import JsonResponse\nfrom django.db import connection\n\ndef health_check(request):\n    try:\n        # Check database\n        with connection.cursor() as cursor:\n            cursor.execute(\"SELECT 1\")\n\n        return JsonResponse({\n            'status': 'healthy',\n            'database': 'connected'\n        })\n    except Exception as e:\n        return JsonResponse({\n            'status': 'unhealthy',\n            'error': str(e)\n        }, status=500)\n</code></pre>"},{"location":"deployment/other-servers/#logging","title":"Logging","text":"<pre><code># settings/production.py\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',\n            'style': '{',\n        },\n    },\n    'handlers': {\n        'file': {\n            'level': 'INFO',\n            'class': 'logging.FileHandler',\n            'filename': '/var/log/rhamaacms/django.log',\n            'formatter': 'verbose',\n        },\n    },\n    'root': {\n        'handlers': ['file'],\n        'level': 'INFO',\n    },\n}\n</code></pre>"},{"location":"deployment/other-servers/#backup-strategy","title":"Backup Strategy","text":"<pre><code>#!/bin/bash\n# backup.sh\n\n# Database backup\npg_dump -h localhost -U username -d rhamaacms &gt; backup_$(date +%Y%m%d_%H%M%S).sql\n\n# Media files backup\ntar -czf media_backup_$(date +%Y%m%d_%H%M%S).tar.gz media/\n\n# Upload to cloud storage (optional)\naws s3 cp backup_*.sql s3://your-backup-bucket/\naws s3 cp media_backup_*.tar.gz s3://your-backup-bucket/\n</code></pre>"},{"location":"deployment/other-servers/#performance-optimization","title":"Performance Optimization","text":""},{"location":"deployment/other-servers/#caching","title":"Caching","text":"<pre><code># Redis cache\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': 'redis://127.0.0.1:6379/1',\n    }\n}\n\n# Page cache\nMIDDLEWARE = [\n    'django.middleware.cache.UpdateCacheMiddleware',\n    # ... other middleware\n    'django.middleware.cache.FetchFromCacheMiddleware',\n]\n\nCACHE_MIDDLEWARE_ALIAS = 'default'\nCACHE_MIDDLEWARE_SECONDS = 600\nCACHE_MIDDLEWARE_KEY_PREFIX = ''\n</code></pre>"},{"location":"deployment/other-servers/#database-optimization","title":"Database Optimization","text":"<pre><code># Connection pooling\nDATABASES = {\n    'default': {\n        # ... database config\n        'CONN_MAX_AGE': 600,\n        'OPTIONS': {\n            'MAX_CONNS': 20,\n            'MIN_CONNS': 5,\n        }\n    }\n}\n</code></pre>"},{"location":"deployment/other-servers/#security-checklist","title":"Security Checklist","text":"<ul> <li>[ ] HTTPS enabled</li> <li>[ ] Strong SECRET_KEY</li> <li>[ ] DEBUG = False in production</li> <li>[ ] Proper ALLOWED_HOSTS</li> <li>[ ] Database credentials secured</li> <li>[ ] Regular security updates</li> <li>[ ] Firewall configured</li> <li>[ ] Backup strategy implemented</li> <li>[ ] Monitoring setup</li> <li>[ ] Error tracking enabled</li> </ul>"},{"location":"deployment/other-servers/#troubleshooting","title":"Troubleshooting","text":""},{"location":"deployment/other-servers/#common-issues","title":"Common Issues","text":"<ol> <li>Static files not loading</li> <li>Check STATIC_URL and STATIC_ROOT</li> <li>Run collectstatic</li> <li> <p>Verify web server configuration</p> </li> <li> <p>Database connection errors</p> </li> <li>Check database credentials</li> <li>Verify network connectivity</li> <li> <p>Check firewall rules</p> </li> <li> <p>Memory issues</p> </li> <li>Monitor memory usage</li> <li>Optimize database queries</li> <li> <p>Implement caching</p> </li> <li> <p>Slow performance</p> </li> <li>Enable caching</li> <li>Optimize database</li> <li>Use CDN for static files</li> </ol> <p>Untuk bantuan lebih lanjut, lihat FAQ atau buka issue di GitHub repository.</p>"},{"location":"development/contributing/","title":"Kontribusi","text":"<p>Terima kasih atas minat Anda untuk berkontribusi pada RhamaaCMS! Panduan ini akan membantu Anda memulai kontribusi dengan cara yang efektif.</p>"},{"location":"development/contributing/#cara-berkontribusi","title":"Cara Berkontribusi","text":"<p>Ada beberapa cara untuk berkontribusi pada RhamaaCMS:</p> <ul> <li>\ud83d\udc1b Report bugs - Laporkan bug yang Anda temukan</li> <li>\ud83d\udca1 Suggest features - Usulkan fitur baru</li> <li>\ud83d\udcdd Improve documentation - Perbaiki atau tambah dokumentasi</li> <li>\ud83d\udcbb Submit code - Kontribusi kode untuk bug fixes atau features</li> <li>\ud83e\uddea Write tests - Tambah atau perbaiki test coverage</li> <li>\ud83c\udfa8 Design improvements - Perbaiki UI/UX</li> </ul>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":""},{"location":"development/contributing/#1-fork-repository","title":"1. Fork Repository","text":"<ol> <li>Kunjungi RhamaaCMS repository</li> <li>Klik tombol \"Fork\" di kanan atas</li> <li>Clone fork Anda ke local machine:</li> </ol> <pre><code>git clone https://github.com/YOUR_USERNAME/RhamaaCMS.git\ncd RhamaaCMS\n</code></pre>"},{"location":"development/contributing/#2-setup-development-environment","title":"2. Setup Development Environment","text":"<pre><code># Buat virtual environment\npython -m venv env\nsource env/bin/activate  # Linux/macOS\n# atau\nenv\\Scripts\\activate     # Windows\n\n# Install dependencies\npip install -r requirements.txt\npip install -r requirements-dev.txt\n\n# Setup database\npython manage.py migrate\npython manage.py load_initial_data\n</code></pre>"},{"location":"development/contributing/#3-create-branch","title":"3. Create Branch","text":"<p>Buat branch baru untuk setiap kontribusi:</p> <pre><code># Untuk bug fix\ngit checkout -b fix/issue-description\n\n# Untuk feature baru\ngit checkout -b feature/feature-name\n\n# Untuk dokumentasi\ngit checkout -b docs/documentation-improvement\n</code></pre>"},{"location":"development/contributing/#development-workflow","title":"Development Workflow","text":""},{"location":"development/contributing/#1-membuat-perubahan","title":"1. Membuat Perubahan","text":""},{"location":"development/contributing/#code-style","title":"Code Style","text":"<p>Ikuti coding standards yang sudah ditetapkan:</p> <ul> <li>Python: Follow PEP 8</li> <li>HTML: Proper indentation dan semantic markup</li> <li>CSS: BEM methodology untuk naming</li> <li>JavaScript: ES6+ standards</li> </ul>"},{"location":"development/contributing/#pre-commit-hooks","title":"Pre-commit Hooks","text":"<p>Install pre-commit hooks untuk quality assurance:</p> <pre><code>pip install pre-commit\npre-commit install\n</code></pre> <p>Hooks yang aktif: - Black - Code formatting - Flake8 - Linting - isort - Import sorting - djhtml - HTML template formatting</p>"},{"location":"development/contributing/#2-testing","title":"2. Testing","text":"<p>Jalankan tests sebelum submit:</p> <pre><code># Run all tests\npython manage.py test\n\n# Run specific app tests\npython manage.py test home\n\n# Run with coverage\ncoverage run --source='.' manage.py test\ncoverage report\n</code></pre>"},{"location":"development/contributing/#writing-tests","title":"Writing Tests","text":"<p>Tambahkan tests untuk setiap perubahan:</p> <pre><code># tests/test_models.py\nfrom django.test import TestCase\nfrom home.models import HomePage\n\nclass HomePageTestCase(TestCase):\n    def setUp(self):\n        self.home_page = HomePage.objects.get(slug='home')\n\n    def test_home_page_title(self):\n        self.assertEqual(self.home_page.title, 'Home')\n\n    def test_home_page_url(self):\n        response = self.client.get('/')\n        self.assertEqual(response.status_code, 200)\n</code></pre>"},{"location":"development/contributing/#3-documentation","title":"3. Documentation","text":"<p>Update dokumentasi jika diperlukan:</p> <pre><code># Install MkDocs\npip install mkdocs mkdocs-material\n\n# Serve documentation locally\nmkdocs serve\n\n# Build documentation\nmkdocs build\n</code></pre>"},{"location":"development/contributing/#submission-guidelines","title":"Submission Guidelines","text":""},{"location":"development/contributing/#1-commit-messages","title":"1. Commit Messages","text":"<p>Gunakan format commit message yang konsisten:</p> <pre><code>type(scope): description\n\n[optional body]\n\n[optional footer]\n</code></pre> <p>Types: - <code>feat</code>: Feature baru - <code>fix</code>: Bug fix - <code>docs</code>: Dokumentasi - <code>style</code>: Formatting, missing semicolons, etc - <code>refactor</code>: Code refactoring - <code>test</code>: Adding tests - <code>chore</code>: Maintenance tasks</p> <p>Examples: <pre><code>feat(home): add hero section to homepage\nfix(admin): resolve image upload issue\ndocs(readme): update installation instructions\n</code></pre></p>"},{"location":"development/contributing/#2-pull-request","title":"2. Pull Request","text":""},{"location":"development/contributing/#before-submitting","title":"Before Submitting","text":"<p>Checklist sebelum submit PR:</p> <ul> <li>[ ] Code follows style guidelines</li> <li>[ ] Tests pass locally</li> <li>[ ] Documentation updated</li> <li>[ ] Commit messages are clear</li> <li>[ ] Branch is up to date with main</li> </ul>"},{"location":"development/contributing/#pr-template","title":"PR Template","text":"<p>Gunakan template berikut untuk PR description:</p> <pre><code>## Description\nBrief description of changes\n\n## Type of Change\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Documentation update\n- [ ] Refactoring\n\n## Testing\n- [ ] Tests pass\n- [ ] New tests added\n- [ ] Manual testing completed\n\n## Screenshots (if applicable)\nAdd screenshots for UI changes\n\n## Checklist\n- [ ] Code follows style guidelines\n- [ ] Self-review completed\n- [ ] Documentation updated\n</code></pre>"},{"location":"development/contributing/#review-process","title":"Review Process","text":"<ol> <li>Automated checks akan berjalan otomatis</li> <li>Maintainer review - Code review oleh maintainer</li> <li>Feedback - Perbaiki jika ada feedback</li> <li>Merge - PR akan di-merge setelah approved</li> </ol>"},{"location":"development/contributing/#issue-guidelines","title":"Issue Guidelines","text":""},{"location":"development/contributing/#reporting-bugs","title":"Reporting Bugs","text":"<p>Gunakan template bug report:</p> <pre><code>**Bug Description**\nClear description of the bug\n\n**Steps to Reproduce**\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected Behavior**\nWhat you expected to happen\n\n**Screenshots**\nAdd screenshots if applicable\n\n**Environment:**\n- OS: [e.g. Ubuntu 20.04]\n- Python version: [e.g. 3.9]\n- Django version: [e.g. 4.2]\n- Wagtail version: [e.g. 5.0]\n</code></pre>"},{"location":"development/contributing/#feature-requests","title":"Feature Requests","text":"<p>Gunakan template feature request:</p> <pre><code>**Feature Description**\nClear description of the feature\n\n**Problem Statement**\nWhat problem does this solve?\n\n**Proposed Solution**\nHow should this be implemented?\n\n**Alternatives Considered**\nOther solutions you've considered\n\n**Additional Context**\nAny other context or screenshots\n</code></pre>"},{"location":"development/contributing/#code-review-guidelines","title":"Code Review Guidelines","text":""},{"location":"development/contributing/#for-contributors","title":"For Contributors","text":"<p>Saat menerima review:</p> <ul> <li>Be responsive - Respond to feedback promptly</li> <li>Be open - Accept constructive criticism</li> <li>Ask questions - If feedback unclear, ask for clarification</li> <li>Make changes - Address all feedback before re-requesting review</li> </ul>"},{"location":"development/contributing/#for-reviewers","title":"For Reviewers","text":"<p>Saat melakukan review:</p> <ul> <li>Be constructive - Provide helpful feedback</li> <li>Be specific - Point to exact lines and suggest improvements</li> <li>Be respectful - Maintain professional tone</li> <li>Test changes - Pull and test the changes locally</li> </ul>"},{"location":"development/contributing/#community-guidelines","title":"Community Guidelines","text":""},{"location":"development/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>Kami berkomitmen untuk menyediakan lingkungan yang:</p> <ul> <li>Welcoming - Terbuka untuk semua kontributor</li> <li>Respectful - Menghormati perbedaan pendapat</li> <li>Collaborative - Bekerja sama untuk tujuan bersama</li> <li>Professional - Maintain professional standards</li> </ul>"},{"location":"development/contributing/#communication","title":"Communication","text":"<ul> <li>GitHub Issues - Untuk bug reports dan feature requests</li> <li>Pull Requests - Untuk code contributions</li> <li>Discussions - Untuk general questions dan ideas</li> </ul>"},{"location":"development/contributing/#development-setup-advanced","title":"Development Setup Advanced","text":""},{"location":"development/contributing/#database-options","title":"Database Options","text":""},{"location":"development/contributing/#postgresql-recommended-for-development","title":"PostgreSQL (Recommended for development)","text":"<pre><code># Install PostgreSQL\nsudo apt-get install postgresql postgresql-contrib\n\n# Create database\nsudo -u postgres createdb rhamaacms_dev\n\n# Update settings\n# settings/dev.py\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'rhamaacms_dev',\n        'USER': 'postgres',\n        'PASSWORD': 'password',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}\n</code></pre>"},{"location":"development/contributing/#frontend-development","title":"Frontend Development","text":""},{"location":"development/contributing/#cssscss","title":"CSS/SCSS","text":"<pre><code># Install Node.js dependencies\nnpm install\n\n# Watch for changes\nnpm run watch\n\n# Build for production\nnpm run build\n</code></pre>"},{"location":"development/contributing/#javascript","title":"JavaScript","text":"<pre><code># Lint JavaScript\nnpm run lint:js\n\n# Format code\nnpm run format:js\n</code></pre>"},{"location":"development/contributing/#release-process","title":"Release Process","text":""},{"location":"development/contributing/#versioning","title":"Versioning","text":"<p>RhamaaCMS menggunakan Semantic Versioning:</p> <ul> <li>MAJOR - Breaking changes</li> <li>MINOR - New features (backward compatible)</li> <li>PATCH - Bug fixes</li> </ul>"},{"location":"development/contributing/#release-checklist","title":"Release Checklist","text":"<p>Untuk maintainers:</p> <ol> <li>Update version numbers</li> <li>Update CHANGELOG.md</li> <li>Run full test suite</li> <li>Create release branch</li> <li>Tag release</li> <li>Update documentation</li> <li>Announce release</li> </ol>"},{"location":"development/contributing/#recognition","title":"Recognition","text":"<p>Kontributor akan diakui dalam:</p> <ul> <li>CONTRIBUTORS.md file</li> <li>Release notes</li> <li>Documentation credits</li> <li>Social media mentions</li> </ul>"},{"location":"development/contributing/#getting-help","title":"Getting Help","text":"<p>Jika Anda membutuhkan bantuan:</p> <ol> <li>Check documentation - Baca dokumentasi terlebih dahulu</li> <li>Search issues - Cari di existing issues</li> <li>Ask questions - Buat issue dengan label \"question\"</li> <li>Join discussions - Participate in GitHub Discussions</li> </ol>"},{"location":"development/contributing/#resources","title":"Resources","text":""},{"location":"development/contributing/#useful-links","title":"Useful Links","text":"<ul> <li>Wagtail Documentation</li> <li>Django Documentation</li> <li>Python Style Guide</li> <li>Git Best Practices</li> </ul>"},{"location":"development/contributing/#tools","title":"Tools","text":"<ul> <li>IDE: VS Code, PyCharm, atau editor favorit Anda</li> <li>Database: PostgreSQL untuk development</li> <li>Testing: pytest, coverage</li> <li>Linting: flake8, black, isort</li> </ul> <p>Terima kasih telah berkontribusi pada RhamaaCMS! Setiap kontribusi, sekecil apapun, sangat berarti untuk kemajuan project ini. \ud83d\ude80</p>"},{"location":"development/template-structure/","title":"Struktur Template","text":"<p>Panduan mendalam tentang struktur template RhamaaCMS dan cara mengkustomisasinya untuk proyek baru.</p>"},{"location":"development/template-structure/#template-architecture","title":"Template Architecture","text":"<p>RhamaaCMS menggunakan sistem template yang modular dan dapat dikustomisasi dengan mudah. Template dirancang untuk:</p> <ul> <li>Reusability - Komponen dapat digunakan kembali</li> <li>Maintainability - Mudah dipelihara dan diupdate</li> <li>Flexibility - Dapat disesuaikan dengan kebutuhan</li> <li>Performance - Optimized untuk kecepatan loading</li> </ul>"},{"location":"development/template-structure/#directory-structure","title":"Directory Structure","text":"<pre><code>project_name/\n\u251c\u2500\u2500 {{ project_name }}/           # Django project directory\n\u2502   \u251c\u2500\u2500 settings/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 base.py              # Base settings\n\u2502   \u2502   \u251c\u2500\u2500 dev.py               # Development settings\n\u2502   \u2502   \u2514\u2500\u2500 production.py        # Production settings\n\u2502   \u251c\u2500\u2500 urls.py                  # Main URL configuration\n\u2502   \u2514\u2500\u2500 wsgi.py                  # WSGI configuration\n\u251c\u2500\u2500 home/                        # Home application\n\u2502   \u251c\u2500\u2500 models.py               # Page models\n\u2502   \u251c\u2500\u2500 templates/home/         # Home app templates\n\u2502   \u251c\u2500\u2500 migrations/             # Database migrations\n\u2502   \u2514\u2500\u2500 templatetags/           # Custom template tags\n\u251c\u2500\u2500 search/                     # Search functionality\n\u251c\u2500\u2500 static/                     # Static files\n\u2502   \u251c\u2500\u2500 css/                   # Stylesheets\n\u2502   \u251c\u2500\u2500 js/                    # JavaScript files\n\u2502   \u251c\u2500\u2500 images/                # Images\n\u2502   \u2514\u2500\u2500 fonts/                 # Web fonts\n\u251c\u2500\u2500 templates/                  # Global templates\n\u2502   \u251c\u2500\u2500 base.html              # Base template\n\u2502   \u251c\u2500\u2500 404.html               # Error pages\n\u2502   \u251c\u2500\u2500 500.html\n\u2502   \u251c\u2500\u2500 blocks/                # Block templates\n\u2502   \u2514\u2500\u2500 includes/              # Reusable includes\n\u251c\u2500\u2500 media/                     # User uploaded files\n\u251c\u2500\u2500 fixtures/                  # Initial data\n\u251c\u2500\u2500 requirements.txt           # Python dependencies\n\u251c\u2500\u2500 manage.py                 # Django management\n\u251c\u2500\u2500 Makefile                  # Development commands\n\u2514\u2500\u2500 README.md                 # Project documentation\n</code></pre>"},{"location":"development/template-structure/#template-variables","title":"Template Variables","text":"<p>Saat menggunakan <code>wagtail start --template=</code>, beberapa variabel akan diganti:</p>"},{"location":"development/template-structure/#project-variables","title":"Project Variables","text":"<ul> <li><code>{{ project_name }}</code> - Nama proyek (folder utama)</li> <li><code>{{ project_slug }}</code> - Slug version dari nama proyek</li> <li><code>{{ app_name }}</code> - Nama aplikasi Django</li> </ul>"},{"location":"development/template-structure/#usage-examples","title":"Usage Examples","text":"<pre><code># Sebelum template processing\nINSTALLED_APPS = [\n    '{{ project_name }}',\n    'home',\n    # ...\n]\n\n# Setelah template processing (jika project_name = \"myblog\")\nINSTALLED_APPS = [\n    'myblog',\n    'home',\n    # ...\n]\n</code></pre>"},{"location":"development/template-structure/#template-tags-protection","title":"Template Tags Protection","text":"<p>Untuk mencegah Django template tags diproses saat <code>wagtail start</code>, gunakan <code>{% verbatim %}</code>:</p> <pre><code>&lt;!-- templates/base.html --&gt;\n{% verbatim %}\n{% load static wagtailcore_tags %}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;{% block title %}{{ page.title }}{% endblock %}&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{% static 'css/main.css' %}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    {% block content %}{% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n{% endverbatim %}\n</code></pre>"},{"location":"development/template-structure/#model-templates","title":"Model Templates","text":""},{"location":"development/template-structure/#page-model-template","title":"Page Model Template","text":"<pre><code># home/models.py template\nfrom django.db import models\nfrom wagtail.models import Page\nfrom wagtail.fields import RichTextField, StreamField\nfrom wagtail.admin.panels import FieldPanel\nfrom wagtail import blocks\n\nclass {{ page_class_name }}(Page):\n    # Fields\n    intro = RichTextField(blank=True)\n    body = StreamField([\n        ('heading', blocks.CharBlock(form_classname=\"title\")),\n        ('paragraph', blocks.RichTextBlock()),\n        ('image', ImageChooserBlock()),\n    ], blank=True, use_json_field=True)\n\n    # Admin panels\n    content_panels = Page.content_panels + [\n        FieldPanel('intro'),\n        FieldPanel('body'),\n    ]\n\n    # Template\n    template = '{{ app_name }}/{{ template_name }}.html'\n</code></pre>"},{"location":"development/template-structure/#block-template","title":"Block Template","text":"<pre><code># blocks.py template\nfrom wagtail import blocks\nfrom wagtail.images.blocks import ImageChooserBlock\n\nclass {{ block_class_name }}(blocks.StructBlock):\n    title = blocks.CharBlock(max_length=255)\n    content = blocks.RichTextBlock()\n    image = ImageChooserBlock(required=False)\n\n    class Meta:\n        template = 'blocks/{{ block_template_name }}.html'\n        icon = '{{ block_icon }}'\n        label = '{{ block_label }}'\n</code></pre>"},{"location":"development/template-structure/#settings-templates","title":"Settings Templates","text":""},{"location":"development/template-structure/#base-settings-template","title":"Base Settings Template","text":"<pre><code># settings/base.py template\nimport os\nfrom pathlib import Path\n\n# Build paths\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n# Application definition\nINSTALLED_APPS = [\n    'home',\n    'search',\n\n    'wagtail.contrib.forms',\n    'wagtail.contrib.redirects',\n    'wagtail.embeds',\n    'wagtail.sites',\n    'wagtail.users',\n    'wagtail.snippets',\n    'wagtail.documents',\n    'wagtail.images',\n    'wagtail.search',\n    'wagtail.admin',\n    'wagtail',\n\n    'modelcluster',\n    'taggit',\n\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n\nMIDDLEWARE = [\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'wagtail.contrib.redirects.middleware.RedirectMiddleware',\n]\n\nROOT_URLCONF = '{{ project_name }}.urls'\n\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n# Internationalization\nLANGUAGE_CODE = 'id'\nTIME_ZONE = 'Asia/Jakarta'\nUSE_I18N = True\nUSE_TZ = True\n\n# Static files\nSTATICFILES_FINDERS = [\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n]\n\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nSTATIC_URL = '/static/'\n\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n\n# Wagtail settings\nWAGTAIL_SITE_NAME = \"{{ project_name|title }}\"\nWAGTAILADMIN_BASE_URL = 'http://localhost:8000'\n\n# Base URL to use when referring to full URLs within the Wagtail admin backend\nBASE_URL = 'http://localhost:8000'\n</code></pre>"},{"location":"development/template-structure/#development-settings-template","title":"Development Settings Template","text":"<pre><code># settings/dev.py template\nfrom .base import *\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\n# SECURITY WARNING: define the correct hosts in production!\nALLOWED_HOSTS = ['*']\n\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n\n# Development-specific apps\nINSTALLED_APPS += [\n    'debug_toolbar',\n    'django_extensions',\n]\n\nMIDDLEWARE += [\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n]\n\n# Debug toolbar configuration\nINTERNAL_IPS = [\n    '127.0.0.1',\n]\n\n# Logging configuration\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'root': {\n        'handlers': ['console'],\n        'level': 'INFO',\n    },\n    'loggers': {\n        'django': {\n            'handlers': ['console'],\n            'level': 'INFO',\n            'propagate': False,\n        },\n    },\n}\n</code></pre>"},{"location":"development/template-structure/#url-templates","title":"URL Templates","text":""},{"location":"development/template-structure/#main-urls-template","title":"Main URLs Template","text":"<pre><code># {{ project_name }}/urls.py template\nfrom django.conf import settings\nfrom django.urls import include, path\nfrom django.contrib import admin\nfrom wagtail.admin import urls as wagtailadmin_urls\nfrom wagtail import urls as wagtail_urls\nfrom wagtail.documents import urls as wagtaildocs_urls\nfrom search import views as search_views\n\nurlpatterns = [\n    path('django-admin/', admin.site.urls),\n    path('admin/', include(wagtailadmin_urls)),\n    path('documents/', include(wagtaildocs_urls)),\n    path('search/', search_views.search, name='search'),\n]\n\nif settings.DEBUG:\n    from django.conf.urls.static import static\n    from django.contrib.staticfiles.urls import staticfiles_urlpatterns\n\n    # Serve static and media files from development server\n    urlpatterns += staticfiles_urlpatterns()\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n\n    # Debug toolbar\n    if 'debug_toolbar' in settings.INSTALLED_APPS:\n        import debug_toolbar\n        urlpatterns = [\n            path('__debug__/', include(debug_toolbar.urls)),\n        ] + urlpatterns\n\nurlpatterns = urlpatterns + [\n    # For anything not caught by a more specific rule above, hand over to\n    # Wagtail's page serving mechanism. This should be the last pattern in\n    # the list:\n    path(\"\", include(wagtail_urls)),\n]\n</code></pre>"},{"location":"development/template-structure/#fixture-templates","title":"Fixture Templates","text":""},{"location":"development/template-structure/#initial-data-template","title":"Initial Data Template","text":"<pre><code>[\n    {\n        \"model\": \"wagtailcore.site\",\n        \"pk\": 1,\n        \"fields\": {\n            \"hostname\": \"localhost\",\n            \"port\": 8000,\n            \"site_name\": \"{{ project_name|title }}\",\n            \"root_page\": 2,\n            \"is_default_site\": true\n        }\n    },\n    {\n        \"model\": \"home.homepage\",\n        \"pk\": 2,\n        \"fields\": {\n            \"title\": \"Home\",\n            \"slug\": \"home\",\n            \"content_type\": [\"home\", \"homepage\"],\n            \"path\": \"00010001\",\n            \"depth\": 2,\n            \"numchild\": 0,\n            \"url_path\": \"/home/\",\n            \"hero_title\": \"Welcome to {{ project_name|title }}\",\n            \"hero_subtitle\": \"Built with RhamaaCMS - A powerful Wagtail template\",\n            \"body\": \"[]\"\n        }\n    }\n]\n</code></pre>"},{"location":"development/template-structure/#makefile-template","title":"Makefile Template","text":"<pre><code># Makefile template\n.PHONY: help install start migrate load-data dump-data test clean\n\nhelp: ## Show this help message\n    @echo 'Usage: make [target]'\n    @echo ''\n    @echo 'Targets:'\n    @awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z_-]+:.*?## / {printf \"  %-15s %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n\ninstall: ## Install dependencies\n    pip install -r requirements.txt\n\nstart: ## Start development server\n    python manage.py runserver\n\nmigrate: ## Run database migrations\n    python manage.py migrate\n\nmakemigrations: ## Create new migrations\n    python manage.py makemigrations\n\nload-data: ## Load initial data\n    python manage.py loaddata fixtures/initial_data.json\n\ndump-data: ## Dump current data to fixtures\n    python manage.py dumpdata --natural-foreign --natural-primary \\\n        -e contenttypes -e auth.permission \\\n        --indent 4 &gt; fixtures/initial_data.json\n\ncollectstatic: ## Collect static files\n    python manage.py collectstatic --noinput\n\ntest: ## Run tests\n    python manage.py test\n\nclean: ## Clean up generated files\n    find . -type f -name \"*.pyc\" -delete\n    find . -type d -name \"__pycache__\" -delete\n    rm -rf staticfiles/\n\nsuperuser: ## Create superuser\n    python manage.py createsuperuser\n\nshell: ## Open Django shell\n    python manage.py shell\n\ncheck: ## Run Django checks\n    python manage.py check\n\nrequirements: ## Update requirements.txt\n    pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"development/template-structure/#docker-templates","title":"Docker Templates","text":""},{"location":"development/template-structure/#dockerfile-template","title":"Dockerfile Template","text":"<pre><code># Dockerfile template\nFROM python:3.11-slim\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\nENV DJANGO_SETTINGS_MODULE={{ project_name }}.settings.production\n\n# Set work directory\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update \\\n    &amp;&amp; apt-get install -y --no-install-recommends \\\n        build-essential \\\n        libpq-dev \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Install Python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy project\nCOPY . .\n\n# Collect static files\nRUN python manage.py collectstatic --noinput\n\n# Create non-root user\nRUN adduser --disabled-password --gecos '' appuser\nRUN chown -R appuser:appuser /app\nUSER appuser\n\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"{{ project_name }}.wsgi:application\"]\n</code></pre>"},{"location":"development/template-structure/#customization-guidelines","title":"Customization Guidelines","text":""},{"location":"development/template-structure/#1-replacing-template-variables","title":"1. Replacing Template Variables","text":"<p>Saat mengkustomisasi template untuk proyek baru:</p> <pre><code># Ganti semua occurrence dari:\n{{ project_name }}     # dengan nama proyek aktual\n{{ app_name }}         # dengan nama app\n{{ model_name }}       # dengan nama model\n</code></pre>"},{"location":"development/template-structure/#2-adding-new-apps","title":"2. Adding New Apps","text":"<p>Template untuk app baru:</p> <pre><code># apps/{{ app_name }}/models.py\nfrom django.db import models\nfrom wagtail.models import Page\nfrom wagtail.admin.panels import FieldPanel\n\nclass {{ model_name }}(Page):\n    # Add your fields here\n    pass\n\n    content_panels = Page.content_panels + [\n        # Add your panels here\n    ]\n</code></pre>"},{"location":"development/template-structure/#3-custom-blocks","title":"3. Custom Blocks","text":"<p>Template untuk custom block:</p> <pre><code># blocks/{{ block_name }}.py\nfrom wagtail import blocks\n\nclass {{ block_class_name }}(blocks.StructBlock):\n    # Define your block fields\n\n    class Meta:\n        template = 'blocks/{{ block_template }}.html'\n        icon = '{{ icon_name }}'\n        label = '{{ block_label }}'\n</code></pre>"},{"location":"development/template-structure/#4-template-tags","title":"4. Template Tags","text":"<p>Template untuk custom template tags:</p> <pre><code># templatetags/{{ app_name }}_tags.py\nfrom django import template\nfrom wagtail.models import Page\n\nregister = template.Library()\n\n@register.simple_tag\ndef {{ tag_name }}():\n    # Your tag logic here\n    pass\n\n@register.inclusion_tag('{{ app_name }}/tags/{{ tag_template }}.html')\ndef {{ inclusion_tag_name }}():\n    # Your inclusion tag logic\n    return {'data': 'value'}\n</code></pre>"},{"location":"development/template-structure/#testing-templates","title":"Testing Templates","text":""},{"location":"development/template-structure/#test-template","title":"Test Template","text":"<pre><code># tests/test_{{ model_name }}.py\nfrom django.test import TestCase\nfrom wagtail.test.utils import WagtailPageTests\nfrom home.models import {{ model_name }}\n\nclass {{ model_name }}Tests(TestCase, WagtailPageTests):\n    def test_can_create_{{ model_name|lower }}(self):\n        # Test model creation\n        pass\n\n    def test_{{ model_name|lower }}_template(self):\n        # Test template rendering\n        pass\n</code></pre>"},{"location":"development/template-structure/#best-practices","title":"Best Practices","text":""},{"location":"development/template-structure/#1-template-organization","title":"1. Template Organization","text":"<ul> <li>Gunakan consistent naming conventions</li> <li>Organize templates by app dan functionality</li> <li>Use template inheritance effectively</li> <li>Keep templates DRY (Don't Repeat Yourself)</li> </ul>"},{"location":"development/template-structure/#2-variable-naming","title":"2. Variable Naming","text":"<ul> <li>Use descriptive variable names</li> <li>Follow Django/Python naming conventions</li> <li>Document complex template logic</li> <li>Use comments untuk clarity</li> </ul>"},{"location":"development/template-structure/#3-performance","title":"3. Performance","text":"<ul> <li>Minimize database queries dalam templates</li> <li>Use template fragment caching</li> <li>Optimize static file loading</li> <li>Implement lazy loading untuk images</li> </ul>"},{"location":"development/template-structure/#4-maintenance","title":"4. Maintenance","text":"<ul> <li>Regular template audits</li> <li>Update dependencies</li> <li>Test template changes</li> <li>Document customizations</li> </ul>"},{"location":"development/template-structure/#migration-guide","title":"Migration Guide","text":"<p>Saat mengupdate template RhamaaCMS:</p> <ol> <li>Backup current project</li> <li>Compare template changes</li> <li>Update modified files</li> <li>Test thoroughly</li> <li>Update documentation</li> </ol>"},{"location":"development/template-structure/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah memahami struktur template:</p> <ol> <li>Pelajari Testing untuk quality assurance</li> <li>Baca Contributing untuk kontribusi</li> <li>Implementasi custom features</li> <li>Deploy ke production</li> </ol> <p>Untuk bantuan lebih lanjut, lihat FAQ atau buka issue di GitHub.</p>"},{"location":"development/testing/","title":"Testing","text":"<p>Panduan lengkap untuk testing RhamaaCMS, termasuk unit tests, integration tests, dan best practices.</p>"},{"location":"development/testing/#testing-framework","title":"Testing Framework","text":"<p>RhamaaCMS menggunakan Django testing framework yang dibangun di atas Python's unittest:</p> <ul> <li>Django TestCase - Untuk database-backed tests</li> <li>Wagtail Test Utils - Utilities khusus untuk Wagtail</li> <li>Factory Boy - Untuk membuat test data</li> <li>Coverage.py - Untuk test coverage analysis</li> </ul>"},{"location":"development/testing/#setup-testing-environment","title":"Setup Testing Environment","text":""},{"location":"development/testing/#install-testing-dependencies","title":"Install Testing Dependencies","text":"<pre><code>pip install -r requirements-dev.txt\n</code></pre>"},{"location":"development/testing/#test-settings","title":"Test Settings","text":"<p>Buat file <code>settings/test.py</code>:</p> <pre><code>from .base import *\n\n# Use in-memory SQLite for faster tests\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': ':memory:',\n    }\n}\n\n# Disable migrations for faster tests\nclass DisableMigrations:\n    def __contains__(self, item):\n        return True\n\n    def __getitem__(self, item):\n        return None\n\nMIGRATION_MODULES = DisableMigrations()\n\n# Disable logging during tests\nLOGGING_CONFIG = None\n\n# Use dummy cache\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',\n    }\n}\n\n# Disable password validation\nAUTH_PASSWORD_VALIDATORS = []\n\n# Use console email backend\nEMAIL_BACKEND = 'django.core.mail.backends.locmem.EmailBackend'\n</code></pre>"},{"location":"development/testing/#model-testing","title":"Model Testing","text":""},{"location":"development/testing/#page-model-tests","title":"Page Model Tests","text":"<pre><code># tests/test_models.py\nfrom django.test import TestCase\nfrom wagtail.test.utils import WagtailPageTests\nfrom wagtail.models import Page, Site\nfrom home.models import HomePage, ContentPage\n\nclass HomePageTests(TestCase, WagtailPageTests):\n    def setUp(self):\n        self.root_page = Page.objects.get(id=2)\n        self.home_page = HomePage(\n            title=\"Test Home\",\n            slug=\"test-home\",\n            hero_title=\"Welcome to Test Site\",\n            hero_subtitle=\"This is a test subtitle\"\n        )\n        self.root_page.add_child(instance=self.home_page)\n\n    def test_can_create_homepage(self):\n        \"\"\"Test that HomePage can be created\"\"\"\n        self.assertCanCreateAt(Page, HomePage)\n\n    def test_homepage_fields(self):\n        \"\"\"Test HomePage fields\"\"\"\n        self.assertEqual(self.home_page.hero_title, \"Welcome to Test Site\")\n        self.assertEqual(self.home_page.hero_subtitle, \"This is a test subtitle\")\n\n    def test_homepage_url(self):\n        \"\"\"Test HomePage URL generation\"\"\"\n        self.assertEqual(self.home_page.url, '/test-home/')\n\n    def test_homepage_template(self):\n        \"\"\"Test HomePage uses correct template\"\"\"\n        response = self.client.get(self.home_page.url)\n        self.assertTemplateUsed(response, 'home/home_page.html')\n\nclass ContentPageTests(TestCase, WagtailPageTests):\n    def setUp(self):\n        self.home_page = HomePage.objects.get(slug='home')\n        self.content_page = ContentPage(\n            title=\"Test Content\",\n            slug=\"test-content\",\n            intro=\"Test introduction\",\n            body=\"&lt;p&gt;Test body content&lt;/p&gt;\"\n        )\n        self.home_page.add_child(instance=self.content_page)\n\n    def test_content_page_creation(self):\n        \"\"\"Test ContentPage creation\"\"\"\n        self.assertCanCreateAt(HomePage, ContentPage)\n\n    def test_content_page_fields(self):\n        \"\"\"Test ContentPage fields\"\"\"\n        self.assertEqual(self.content_page.intro, \"Test introduction\")\n        self.assertIn(\"Test body content\", self.content_page.body)\n\n    def test_content_page_parent_types(self):\n        \"\"\"Test ContentPage can only be created under certain parents\"\"\"\n        self.assertCanCreateAt(HomePage, ContentPage)\n        self.assertCanNotCreateAt(ContentPage, ContentPage)\n</code></pre>"},{"location":"development/testing/#block-testing","title":"Block Testing","text":"<pre><code># tests/test_blocks.py\nfrom django.test import TestCase\nfrom wagtail.blocks import StreamValue\nfrom home.blocks import HeroBlock, CardBlock\n\nclass HeroBlockTests(TestCase):\n    def setUp(self):\n        self.hero_block = HeroBlock()\n\n    def test_hero_block_render(self):\n        \"\"\"Test HeroBlock rendering\"\"\"\n        value = {\n            'title': 'Test Hero Title',\n            'subtitle': 'Test Hero Subtitle',\n            'cta_text': 'Click Me',\n            'cta_url': 'https://example.com'\n        }\n\n        html = self.hero_block.render(value)\n        self.assertIn('Test Hero Title', html)\n        self.assertIn('Test Hero Subtitle', html)\n        self.assertIn('Click Me', html)\n        self.assertIn('https://example.com', html)\n\n    def test_hero_block_validation(self):\n        \"\"\"Test HeroBlock validation\"\"\"\n        # Valid data\n        valid_data = {\n            'title': 'Valid Title',\n            'subtitle': 'Valid Subtitle'\n        }\n        self.assertTrue(self.hero_block.clean(valid_data))\n\n        # Invalid data (missing required title)\n        invalid_data = {\n            'subtitle': 'Valid Subtitle'\n        }\n        with self.assertRaises(ValidationError):\n            self.hero_block.clean(invalid_data)\n\nclass CardBlockTests(TestCase):\n    def test_card_block_render(self):\n        \"\"\"Test CardBlock rendering\"\"\"\n        card_block = CardBlock()\n        value = {\n            'title': 'Test Card',\n            'description': 'Test Description',\n            'link': 'https://example.com'\n        }\n\n        html = card_block.render(value)\n        self.assertIn('Test Card', html)\n        self.assertIn('Test Description', html)\n        self.assertIn('https://example.com', html)\n</code></pre>"},{"location":"development/testing/#view-testing","title":"View Testing","text":""},{"location":"development/testing/#page-view-tests","title":"Page View Tests","text":"<pre><code># tests/test_views.py\nfrom django.test import TestCase, Client\nfrom django.contrib.auth.models import User\nfrom wagtail.models import Page\nfrom home.models import HomePage\n\nclass PageViewTests(TestCase):\n    def setUp(self):\n        self.client = Client()\n        self.home_page = HomePage.objects.get(slug='home')\n\n    def test_homepage_get(self):\n        \"\"\"Test homepage GET request\"\"\"\n        response = self.client.get('/')\n        self.assertEqual(response.status_code, 200)\n        self.assertContains(response, self.home_page.title)\n\n    def test_homepage_context(self):\n        \"\"\"Test homepage context variables\"\"\"\n        response = self.client.get('/')\n        self.assertIn('page', response.context)\n        self.assertEqual(response.context['page'], self.home_page)\n\n    def test_404_page(self):\n        \"\"\"Test 404 error page\"\"\"\n        response = self.client.get('/non-existent-page/')\n        self.assertEqual(response.status_code, 404)\n\nclass SearchViewTests(TestCase):\n    def setUp(self):\n        self.client = Client()\n\n    def test_search_get(self):\n        \"\"\"Test search page GET request\"\"\"\n        response = self.client.get('/search/')\n        self.assertEqual(response.status_code, 200)\n        self.assertTemplateUsed(response, 'search/search.html')\n\n    def test_search_with_query(self):\n        \"\"\"Test search with query parameter\"\"\"\n        response = self.client.get('/search/?query=test')\n        self.assertEqual(response.status_code, 200)\n        self.assertIn('query', response.context)\n        self.assertEqual(response.context['query'], 'test')\n</code></pre>"},{"location":"development/testing/#admin-testing","title":"Admin Testing","text":""},{"location":"development/testing/#admin-interface-tests","title":"Admin Interface Tests","text":"<pre><code># tests/test_admin.py\nfrom django.test import TestCase\nfrom django.contrib.auth.models import User\nfrom wagtail.test.utils import WagtailTestUtils\nfrom home.models import HomePage\n\nclass AdminTests(TestCase, WagtailTestUtils):\n    def setUp(self):\n        self.user = self.create_superuser(\n            username='admin',\n            email='admin@example.com',\n            password='password'\n        )\n        self.home_page = HomePage.objects.get(slug='home')\n\n    def test_admin_login(self):\n        \"\"\"Test admin login\"\"\"\n        self.client.login(username='admin', password='password')\n        response = self.client.get('/admin/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_page_edit_access(self):\n        \"\"\"Test page edit access\"\"\"\n        self.client.login(username='admin', password='password')\n        response = self.client.get(f'/admin/pages/{self.home_page.id}/edit/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_page_creation(self):\n        \"\"\"Test page creation through admin\"\"\"\n        self.client.login(username='admin', password='password')\n\n        # Get add page form\n        response = self.client.get(f'/admin/pages/add/home/contentpage/{self.home_page.id}/')\n        self.assertEqual(response.status_code, 200)\n\n        # Submit new page\n        response = self.client.post(f'/admin/pages/add/home/contentpage/{self.home_page.id}/', {\n            'title': 'New Test Page',\n            'slug': 'new-test-page',\n            'intro': 'Test introduction',\n            'body': '&lt;p&gt;Test content&lt;/p&gt;',\n            'action-publish': 'Publish'\n        })\n\n        # Should redirect after successful creation\n        self.assertEqual(response.status_code, 302)\n</code></pre>"},{"location":"development/testing/#form-testing","title":"Form Testing","text":""},{"location":"development/testing/#contact-form-tests","title":"Contact Form Tests","text":"<pre><code># tests/test_forms.py\nfrom django.test import TestCase\nfrom home.forms import ContactForm\n\nclass ContactFormTests(TestCase):\n    def test_valid_form(self):\n        \"\"\"Test valid contact form\"\"\"\n        form_data = {\n            'name': 'John Doe',\n            'email': 'john@example.com',\n            'subject': 'Test Subject',\n            'message': 'Test message content'\n        }\n        form = ContactForm(data=form_data)\n        self.assertTrue(form.is_valid())\n\n    def test_invalid_email(self):\n        \"\"\"Test form with invalid email\"\"\"\n        form_data = {\n            'name': 'John Doe',\n            'email': 'invalid-email',\n            'subject': 'Test Subject',\n            'message': 'Test message content'\n        }\n        form = ContactForm(data=form_data)\n        self.assertFalse(form.is_valid())\n        self.assertIn('email', form.errors)\n\n    def test_required_fields(self):\n        \"\"\"Test form with missing required fields\"\"\"\n        form = ContactForm(data={})\n        self.assertFalse(form.is_valid())\n        self.assertIn('name', form.errors)\n        self.assertIn('email', form.errors)\n        self.assertIn('message', form.errors)\n</code></pre>"},{"location":"development/testing/#template-testing","title":"Template Testing","text":""},{"location":"development/testing/#template-tag-tests","title":"Template Tag Tests","text":"<pre><code># tests/test_templatetags.py\nfrom django.test import TestCase\nfrom django.template import Context, Template\nfrom home.models import HomePage\n\nclass TemplateTagTests(TestCase):\n    def setUp(self):\n        self.home_page = HomePage.objects.get(slug='home')\n\n    def test_navigation_tag(self):\n        \"\"\"Test navigation template tag\"\"\"\n        template = Template('{% load home_tags %}{% navigation %}')\n        rendered = template.render(Context())\n        self.assertIn('nav', rendered)\n\n    def test_breadcrumbs_tag(self):\n        \"\"\"Test breadcrumbs template tag\"\"\"\n        template = Template('{% load home_tags %}{% breadcrumbs page %}')\n        context = Context({'page': self.home_page})\n        rendered = template.render(context)\n        self.assertIn('breadcrumb', rendered)\n</code></pre>"},{"location":"development/testing/#factory-classes","title":"Factory Classes","text":""},{"location":"development/testing/#model-factories","title":"Model Factories","text":"<pre><code># tests/factories.py\nimport factory\nfrom django.contrib.auth.models import User\nfrom wagtail.models import Page\nfrom home.models import HomePage, ContentPage\n\nclass UserFactory(factory.django.DjangoModelFactory):\n    class Meta:\n        model = User\n\n    username = factory.Sequence(lambda n: f'user{n}')\n    email = factory.LazyAttribute(lambda obj: f'{obj.username}@example.com')\n    first_name = factory.Faker('first_name')\n    last_name = factory.Faker('last_name')\n\nclass HomePageFactory(factory.django.DjangoModelFactory):\n    class Meta:\n        model = HomePage\n\n    title = 'Home'\n    slug = 'home'\n    hero_title = factory.Faker('sentence', nb_words=4)\n    hero_subtitle = factory.Faker('text', max_nb_chars=200)\n\nclass ContentPageFactory(factory.django.DjangoModelFactory):\n    class Meta:\n        model = ContentPage\n\n    title = factory.Faker('sentence', nb_words=3)\n    slug = factory.LazyAttribute(lambda obj: obj.title.lower().replace(' ', '-'))\n    intro = factory.Faker('text', max_nb_chars=250)\n    body = factory.Faker('text', max_nb_chars=1000)\n</code></pre>"},{"location":"development/testing/#using-factories-in-tests","title":"Using Factories in Tests","text":"<pre><code># tests/test_with_factories.py\nfrom django.test import TestCase\nfrom .factories import HomePageFactory, ContentPageFactory, UserFactory\n\nclass FactoryTests(TestCase):\n    def test_homepage_factory(self):\n        \"\"\"Test HomePage factory\"\"\"\n        home_page = HomePageFactory()\n        self.assertIsInstance(home_page, HomePage)\n        self.assertTrue(home_page.hero_title)\n\n    def test_content_page_factory(self):\n        \"\"\"Test ContentPage factory\"\"\"\n        home_page = HomePageFactory()\n        content_page = ContentPageFactory(parent=home_page)\n        self.assertIsInstance(content_page, ContentPage)\n        self.assertEqual(content_page.get_parent(), home_page)\n\n    def test_user_factory(self):\n        \"\"\"Test User factory\"\"\"\n        user = UserFactory()\n        self.assertTrue(user.username)\n        self.assertTrue(user.email)\n</code></pre>"},{"location":"development/testing/#integration-testing","title":"Integration Testing","text":""},{"location":"development/testing/#full-page-tests","title":"Full Page Tests","text":"<pre><code># tests/test_integration.py\nfrom django.test import TestCase, TransactionTestCase\nfrom django.contrib.auth.models import User\nfrom wagtail.models import Site\nfrom home.models import HomePage\nfrom .factories import HomePageFactory, UserFactory\n\nclass IntegrationTests(TransactionTestCase):\n    def setUp(self):\n        # Create site and homepage\n        self.site = Site.objects.get(is_default_site=True)\n        self.home_page = HomePageFactory()\n        self.site.root_page = self.home_page\n        self.site.save()\n\n    def test_full_page_workflow(self):\n        \"\"\"Test complete page creation and publishing workflow\"\"\"\n        # Create admin user\n        admin = UserFactory(is_superuser=True, is_staff=True)\n        self.client.force_login(admin)\n\n        # Create new page\n        response = self.client.post(f'/admin/pages/add/home/contentpage/{self.home_page.id}/', {\n            'title': 'Integration Test Page',\n            'slug': 'integration-test',\n            'intro': 'Integration test introduction',\n            'body': '&lt;p&gt;Integration test content&lt;/p&gt;',\n            'action-publish': 'Publish'\n        })\n\n        # Verify redirect\n        self.assertEqual(response.status_code, 302)\n\n        # Verify page exists and is accessible\n        response = self.client.get('/integration-test/')\n        self.assertEqual(response.status_code, 200)\n        self.assertContains(response, 'Integration Test Page')\n</code></pre>"},{"location":"development/testing/#performance-testing","title":"Performance Testing","text":""},{"location":"development/testing/#database-query-tests","title":"Database Query Tests","text":"<pre><code># tests/test_performance.py\nfrom django.test import TestCase\nfrom django.test.utils import override_settings\nfrom django.db import connection\nfrom home.models import HomePage\n\nclass PerformanceTests(TestCase):\n    def test_homepage_query_count(self):\n        \"\"\"Test homepage doesn't make too many database queries\"\"\"\n        home_page = HomePage.objects.get(slug='home')\n\n        with self.assertNumQueries(5):  # Adjust based on expected queries\n            response = self.client.get('/')\n            self.assertEqual(response.status_code, 200)\n\n    def test_search_performance(self):\n        \"\"\"Test search page performance\"\"\"\n        with self.assertNumQueries(10):  # Adjust based on expected queries\n            response = self.client.get('/search/?query=test')\n            self.assertEqual(response.status_code, 200)\n</code></pre>"},{"location":"development/testing/#running-tests","title":"Running Tests","text":""},{"location":"development/testing/#basic-test-commands","title":"Basic Test Commands","text":"<pre><code># Run all tests\npython manage.py test\n\n# Run specific app tests\npython manage.py test home\n\n# Run specific test class\npython manage.py test home.tests.test_models.HomePageTests\n\n# Run specific test method\npython manage.py test home.tests.test_models.HomePageTests.test_can_create_homepage\n\n# Run with verbosity\npython manage.py test --verbosity=2\n\n# Run with keepdb (faster for repeated runs)\npython manage.py test --keepdb\n\n# Run parallel tests\npython manage.py test --parallel\n</code></pre>"},{"location":"development/testing/#coverage-analysis","title":"Coverage Analysis","text":"<pre><code># Install coverage\npip install coverage\n\n# Run tests with coverage\ncoverage run --source='.' manage.py test\n\n# Generate coverage report\ncoverage report\n\n# Generate HTML coverage report\ncoverage html\n\n# View coverage in browser\nopen htmlcov/index.html\n</code></pre>"},{"location":"development/testing/#test-configuration","title":"Test Configuration","text":"<pre><code># pytest.ini or setup.cfg\n[tool:pytest]\nDJANGO_SETTINGS_MODULE = myproject.settings.test\npython_files = tests.py test_*.py *_tests.py\naddopts = --tb=short --strict-markers\nmarkers =\n    slow: marks tests as slow\n    integration: marks tests as integration tests\n</code></pre>"},{"location":"development/testing/#continuous-integration","title":"Continuous Integration","text":""},{"location":"development/testing/#github-actions","title":"GitHub Actions","text":"<pre><code># .github/workflows/test.yml\nname: Tests\n\non: [push, pull_request]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        python-version: [3.8, 3.9, '3.10', 3.11]\n\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Set up Python ${{ matrix.python-version }}\n      uses: actions/setup-python@v4\n      with:\n        python-version: ${{ matrix.python-version }}\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n        pip install -r requirements-dev.txt\n\n    - name: Run tests\n      run: |\n        python manage.py test --settings=myproject.settings.test\n\n    - name: Run coverage\n      run: |\n        coverage run --source='.' manage.py test --settings=myproject.settings.test\n        coverage xml\n\n    - name: Upload coverage to Codecov\n      uses: codecov/codecov-action@v3\n      with:\n        file: ./coverage.xml\n</code></pre>"},{"location":"development/testing/#best-practices","title":"Best Practices","text":""},{"location":"development/testing/#1-test-organization","title":"1. Test Organization","text":"<ul> <li>Organize tests by functionality</li> <li>Use descriptive test names</li> <li>Group related tests in classes</li> <li>Keep tests independent</li> </ul>"},{"location":"development/testing/#2-test-data","title":"2. Test Data","text":"<ul> <li>Use factories for test data creation</li> <li>Clean up test data after each test</li> <li>Use realistic but minimal test data</li> <li>Avoid hardcoded values</li> </ul>"},{"location":"development/testing/#3-assertions","title":"3. Assertions","text":"<ul> <li>Use specific assertions</li> <li>Test both positive and negative cases</li> <li>Verify error conditions</li> <li>Check edge cases</li> </ul>"},{"location":"development/testing/#4-performance","title":"4. Performance","text":"<ul> <li>Use <code>TestCase</code> for database tests</li> <li>Use <code>SimpleTestCase</code> for non-database tests</li> <li>Mock external dependencies</li> <li>Use <code>setUpClass</code> for expensive setup</li> </ul>"},{"location":"development/testing/#5-maintenance","title":"5. Maintenance","text":"<ul> <li>Keep tests up to date with code changes</li> <li>Remove obsolete tests</li> <li>Refactor duplicate test code</li> <li>Document complex test scenarios</li> </ul>"},{"location":"development/testing/#debugging-tests","title":"Debugging Tests","text":""},{"location":"development/testing/#common-issues","title":"Common Issues","text":"<ol> <li> <p>Test database not created <pre><code>python manage.py test --debug-mode\n</code></pre></p> </li> <li> <p>Migrations not applied <pre><code>python manage.py test --keepdb --debug-mode\n</code></pre></p> </li> <li> <p>Static files not found <pre><code># In test settings\nSTATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'\n</code></pre></p> </li> </ol>"},{"location":"development/testing/#debug-tools","title":"Debug Tools","text":"<pre><code># Add to test for debugging\nimport pdb; pdb.set_trace()\n\n# Or use Django's debug\nfrom django.test.utils import setup_test_environment\nsetup_test_environment(debug=True)\n</code></pre>"},{"location":"development/testing/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah menguasai testing:</p> <ol> <li>Implementasi automated testing dalam CI/CD</li> <li>Setup monitoring dan alerting</li> <li>Performance testing dan optimization</li> <li>Security testing</li> </ol> <p>Untuk informasi lebih lanjut, lihat Contributing dan FAQ.</p>"},{"location":"getting-started/initial-setup/","title":"Konfigurasi Awal","text":"<p>Setelah instalasi selesai, ikuti langkah-langkah berikut untuk mengkonfigurasi proyek RhamaaCMS Anda.</p>"},{"location":"getting-started/initial-setup/#load-data-dummy","title":"Load Data Dummy","text":"<p>RhamaaCMS menyediakan data dummy untuk membantu Anda memulai dengan cepat:</p> <pre><code>make load-data\n</code></pre> <p>Apa yang dimuat?</p> <p>Perintah ini akan memuat: - Halaman contoh dengan berbagai tipe konten - User admin default - Pengaturan situs dasar - Media files contoh</p>"},{"location":"getting-started/initial-setup/#konfigurasi-database","title":"Konfigurasi Database","text":""},{"location":"getting-started/initial-setup/#database-default-sqlite","title":"Database Default (SQLite)","text":"<p>Secara default, RhamaaCMS menggunakan SQLite yang tidak memerlukan konfigurasi tambahan. Database akan dibuat otomatis saat pertama kali menjalankan migrasi.</p>"},{"location":"getting-started/initial-setup/#menggunakan-postgresql-opsional","title":"Menggunakan PostgreSQL (Opsional)","text":"<p>Untuk production, disarankan menggunakan PostgreSQL:</p> <ol> <li> <p>Install PostgreSQL adapter: <pre><code>pip install psycopg2-binary\n</code></pre></p> </li> <li> <p>Update settings.py: <pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'rhamaacms_db',\n        'USER': 'your_username',\n        'PASSWORD': 'your_password',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}\n</code></pre></p> </li> <li> <p>Jalankan migrasi: <pre><code>python manage.py migrate\n</code></pre></p> </li> </ol>"},{"location":"getting-started/initial-setup/#konfigurasi-environment-variables","title":"Konfigurasi Environment Variables","text":"<p>Buat file <code>.env</code> di root proyek untuk menyimpan konfigurasi sensitif:</p> <pre><code># .env\nSECRET_KEY=your-secret-key-here\nDEBUG=True\nALLOWED_HOSTS=localhost,127.0.0.1\n\n# Database (jika menggunakan PostgreSQL)\nDATABASE_URL=postgres://user:password@localhost:5432/dbname\n\n# Email settings (opsional)\nEMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend\nEMAIL_HOST=smtp.gmail.com\nEMAIL_PORT=587\nEMAIL_USE_TLS=True\nEMAIL_HOST_USER=your-email@gmail.com\nEMAIL_HOST_PASSWORD=your-app-password\n</code></pre> <p>Keamanan</p> <p>Jangan pernah commit file <code>.env</code> ke version control. Tambahkan ke <code>.gitignore</code>.</p>"},{"location":"getting-started/initial-setup/#membuat-superuser","title":"Membuat Superuser","text":"<p>Jika Anda tidak menggunakan data dummy, buat superuser untuk mengakses admin:</p> <pre><code>python manage.py createsuperuser\n</code></pre> <p>Ikuti prompt untuk memasukkan: - Username - Email address - Password</p>"},{"location":"getting-started/initial-setup/#konfigurasi-media-files","title":"Konfigurasi Media Files","text":""},{"location":"getting-started/initial-setup/#development","title":"Development","text":"<p>Untuk development, media files disimpan secara lokal. Pastikan folder <code>media/</code> dapat ditulis:</p> <pre><code>mkdir -p media\nchmod 755 media\n</code></pre>"},{"location":"getting-started/initial-setup/#production","title":"Production","text":"<p>Untuk production, disarankan menggunakan cloud storage seperti AWS S3:</p> <ol> <li> <p>Install django-storages: <pre><code>pip install django-storages boto3\n</code></pre></p> </li> <li> <p>Update settings.py: <pre><code># settings/production.py\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = 'your-access-key'\nAWS_SECRET_ACCESS_KEY = 'your-secret-key'\nAWS_STORAGE_BUCKET_NAME = 'your-bucket-name'\nAWS_S3_REGION_NAME = 'your-region'\n</code></pre></p> </li> </ol>"},{"location":"getting-started/initial-setup/#konfigurasi-cache-opsional","title":"Konfigurasi Cache (Opsional)","text":"<p>Untuk performa yang lebih baik, aktifkan caching:</p>"},{"location":"getting-started/initial-setup/#redis-cache","title":"Redis Cache","text":"<ol> <li> <p>Install Redis dan python client: <pre><code># Ubuntu/Debian\nsudo apt-get install redis-server\npip install redis\n</code></pre></p> </li> <li> <p>Update settings.py: <pre><code>CACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': 'redis://127.0.0.1:6379/1',\n    }\n}\n</code></pre></p> </li> </ol>"},{"location":"getting-started/initial-setup/#verifikasi-konfigurasi","title":"Verifikasi Konfigurasi","text":"<p>Jalankan check untuk memastikan semua konfigurasi benar:</p> <pre><code>python manage.py check --deploy\n</code></pre>"},{"location":"getting-started/initial-setup/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah konfigurasi selesai, Anda siap untuk menjalankan server dan mulai mengembangkan situs Anda.</p>"},{"location":"getting-started/installation/","title":"Instalasi RhamaaCMS","text":"<p>Panduan lengkap untuk menginstall dan menyiapkan RhamaaCMS di sistem Anda.</p>"},{"location":"getting-started/installation/#persyaratan-sistem","title":"Persyaratan Sistem","text":"<p>Sebelum memulai, pastikan sistem Anda memenuhi persyaratan berikut:</p>"},{"location":"getting-started/installation/#python-version","title":"Python Version","text":"<p>Anda memerlukan versi Python yang kompatibel dengan Wagtail:</p> Linux/macOSWindows <pre><code>python --version\n# atau\npython3 --version\n</code></pre> <pre><code>py --version\n</code></pre> <p>Versi yang Direkomendasikan</p> <p>Gunakan Python 3.8 atau lebih baru untuk kompatibilitas terbaik.</p>"},{"location":"getting-started/installation/#langkah-instalasi","title":"Langkah Instalasi","text":""},{"location":"getting-started/installation/#1-membuat-virtual-environment","title":"1. Membuat Virtual Environment","text":"<p>Virtual environment membantu mengisolasi dependencies proyek Anda:</p> Linux/macOSWindows <pre><code>python -m venv myproject/env\nsource myproject/env/bin/activate\n</code></pre> <pre><code>python -m venv myproject\\env\nmyproject\\env\\Scripts\\activate\n</code></pre> <p>Penting</p> <p>Pastikan virtual environment aktif sebelum melanjutkan. Anda akan melihat <code>(env)</code> di awal prompt terminal.</p>"},{"location":"getting-started/installation/#2-navigasi-ke-direktori-proyek","title":"2. Navigasi ke Direktori Proyek","text":"<pre><code>cd myproject\n</code></pre>"},{"location":"getting-started/installation/#3-install-wagtail","title":"3. Install Wagtail","text":"<pre><code>pip install wagtail\n</code></pre>"},{"location":"getting-started/installation/#4-inisialisasi-proyek-dengan-template-rhamaacms","title":"4. Inisialisasi Proyek dengan Template RhamaaCMS","text":"<pre><code>wagtail start --template=https://github.com/rhamaa/RhamaaCMS/archive/refs/heads/main.zip myproject .\n</code></pre> <p>Template URL</p> <p>Template diunduh langsung dari GitHub repository RhamaaCMS. Pastikan koneksi internet stabil.</p>"},{"location":"getting-started/installation/#5-install-dependencies-proyek","title":"5. Install Dependencies Proyek","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/installation/#verifikasi-instalasi","title":"Verifikasi Instalasi","text":"<p>Untuk memastikan instalasi berhasil, jalankan perintah berikut:</p> <pre><code>python manage.py check\n</code></pre> <p>Jika tidak ada error, instalasi Anda berhasil!</p>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#error-python-tidak-ditemukan","title":"Error: Python tidak ditemukan","text":"<p>Solusi: - Pastikan Python terinstall dengan benar - Tambahkan Python ke PATH sistem - Gunakan <code>python3</code> instead of <code>python</code> di Linux/macOS</p>"},{"location":"getting-started/installation/#error-pip-tidak-ditemukan","title":"Error: pip tidak ditemukan","text":"<p>Solusi: <pre><code>python -m ensurepip --upgrade\n</code></pre></p>"},{"location":"getting-started/installation/#error-permission-denied","title":"Error: Permission denied","text":"<p>Solusi: - Gunakan virtual environment (direkomendasikan) - Atau gunakan <code>--user</code> flag: <code>pip install --user wagtail</code></p>"},{"location":"getting-started/installation/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah instalasi selesai, lanjutkan ke Konfigurasi Awal untuk menyiapkan proyek Anda.</p>"},{"location":"getting-started/running-server/","title":"Menjalankan Server","text":"<p>Panduan untuk menjalankan server development dan mengakses aplikasi RhamaaCMS Anda.</p>"},{"location":"getting-started/running-server/#menjalankan-development-server","title":"Menjalankan Development Server","text":""},{"location":"getting-started/running-server/#menggunakan-make-command","title":"Menggunakan Make Command","text":"<p>RhamaaCMS menyediakan Makefile untuk mempermudah development:</p> <pre><code>make start\n</code></pre>"},{"location":"getting-started/running-server/#menggunakan-django-command","title":"Menggunakan Django Command","text":"<p>Alternatif, Anda dapat menjalankan server secara langsung:</p> <pre><code>python manage.py runserver\n</code></pre>"},{"location":"getting-started/running-server/#menjalankan-di-port-khusus","title":"Menjalankan di Port Khusus","text":"<pre><code>python manage.py runserver 8080\n</code></pre> <p>atau</p> <pre><code>python manage.py runserver 0.0.0.0:8000\n</code></pre> <p>Akses dari Jaringan</p> <p>Gunakan <code>0.0.0.0:8000</code> untuk mengakses server dari perangkat lain di jaringan yang sama.</p>"},{"location":"getting-started/running-server/#mengakses-aplikasi","title":"Mengakses Aplikasi","text":"<p>Setelah server berjalan, Anda dapat mengakses:</p>"},{"location":"getting-started/running-server/#frontend-website","title":"Frontend Website","text":"<ul> <li>URL: http://localhost:8000</li> <li>Deskripsi: Halaman utama website yang dapat dilihat pengunjung</li> </ul>"},{"location":"getting-started/running-server/#admin-panel","title":"Admin Panel","text":"<ul> <li>URL: http://localhost:8000/admin</li> <li>Kredensial Default:</li> <li>Username: <code>rhamaa</code></li> <li>Password: <code>admin</code></li> </ul> <p>Keamanan</p> <p>Segera ganti password default setelah login pertama kali!</p>"},{"location":"getting-started/running-server/#django-admin-opsional","title":"Django Admin (Opsional)","text":"<ul> <li>URL: http://localhost:8000/django-admin</li> <li>Deskripsi: Django admin interface untuk management tingkat rendah</li> </ul>"},{"location":"getting-started/running-server/#fitur-development-server","title":"Fitur Development Server","text":""},{"location":"getting-started/running-server/#auto-reload","title":"Auto-reload","text":"<p>Development server akan otomatis restart ketika Anda mengubah file Python:</p> <pre><code>Watching for file changes with StatReloader\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\nJanuary 26, 2025 - 10:30:00\nDjango version 4.2.x, using settings 'myproject.settings.dev'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n</code></pre>"},{"location":"getting-started/running-server/#static-files","title":"Static Files","text":"<p>Static files (CSS, JS, images) disajikan otomatis dalam mode development.</p>"},{"location":"getting-started/running-server/#debug-mode","title":"Debug Mode","text":"<p>Dalam development, debug mode aktif sehingga Anda akan melihat: - Error pages yang detail - Django Debug Toolbar (jika diinstall) - SQL query information</p>"},{"location":"getting-started/running-server/#perintah-make-lainnya","title":"Perintah Make Lainnya","text":"<p>RhamaaCMS menyediakan beberapa perintah make yang berguna:</p>"},{"location":"getting-started/running-server/#load-data","title":"Load Data","text":"<p><pre><code>make load-data\n</code></pre> Memuat data dummy untuk development.</p>"},{"location":"getting-started/running-server/#dump-data","title":"Dump Data","text":"<p><pre><code>make dump-data\n</code></pre> Menyimpan data saat ini ke fixtures.</p>"},{"location":"getting-started/running-server/#run-tests","title":"Run Tests","text":"<p><pre><code>make test\n</code></pre> Menjalankan test suite.</p>"},{"location":"getting-started/running-server/#collect-static-files","title":"Collect Static Files","text":"<p><pre><code>make collectstatic\n</code></pre> Mengumpulkan static files untuk production.</p>"},{"location":"getting-started/running-server/#database-migration","title":"Database Migration","text":"<p><pre><code>make migrate\n</code></pre> Menjalankan database migrations.</p>"},{"location":"getting-started/running-server/#create-migration","title":"Create Migration","text":"<p><pre><code>make makemigrations\n</code></pre> Membuat migration files baru.</p>"},{"location":"getting-started/running-server/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/running-server/#port-sudah-digunakan","title":"Port Sudah Digunakan","text":"<p>Error: <pre><code>Error: That port is already in use.\n</code></pre></p> <p>Solusi: <pre><code># Gunakan port lain\npython manage.py runserver 8080\n\n# Atau kill process yang menggunakan port 8000\nsudo lsof -t -i tcp:8000 | xargs kill -9\n</code></pre></p>"},{"location":"getting-started/running-server/#permission-denied","title":"Permission Denied","text":"<p>Error: <pre><code>PermissionError: [Errno 13] Permission denied\n</code></pre></p> <p>Solusi: - Pastikan virtual environment aktif - Periksa permission folder proyek - Jalankan dengan user yang tepat</p>"},{"location":"getting-started/running-server/#module-not-found","title":"Module Not Found","text":"<p>Error: <pre><code>ModuleNotFoundError: No module named 'wagtail'\n</code></pre></p> <p>Solusi: <pre><code># Pastikan virtual environment aktif\nsource env/bin/activate\n\n# Install ulang dependencies\npip install -r requirements.txt\n</code></pre></p>"},{"location":"getting-started/running-server/#database-error","title":"Database Error","text":"<p>Error: <pre><code>django.db.utils.OperationalError: no such table\n</code></pre></p> <p>Solusi: <pre><code># Jalankan migrations\npython manage.py migrate\n\n# Atau gunakan make command\nmake migrate\n</code></pre></p>"},{"location":"getting-started/running-server/#tips-development","title":"Tips Development","text":""},{"location":"getting-started/running-server/#1-gunakan-debug-toolbar","title":"1. Gunakan Debug Toolbar","text":"<p>Install Django Debug Toolbar untuk debugging yang lebih baik:</p> <pre><code>pip install django-debug-toolbar\n</code></pre>"},{"location":"getting-started/running-server/#2-monitor-log-files","title":"2. Monitor Log Files","text":"<p>Pantau log files untuk debugging:</p> <pre><code>tail -f logs/django.log\n</code></pre>"},{"location":"getting-started/running-server/#3-gunakan-shell","title":"3. Gunakan Shell","text":"<p>Akses Django shell untuk testing:</p> <pre><code>python manage.py shell\n</code></pre>"},{"location":"getting-started/running-server/#4-browser-auto-refresh","title":"4. Browser Auto-refresh","text":"<p>Gunakan tools seperti LiveReload untuk auto-refresh browser saat file berubah.</p>"},{"location":"getting-started/running-server/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah server berjalan dengan baik, Anda dapat mulai mempelajari struktur proyek dan mulai mengembangkan konten.</p>"},{"location":"guide/content-management/","title":"Mengelola Konten","text":"<p>Panduan lengkap untuk mengelola konten di RhamaaCMS menggunakan admin interface Wagtail.</p>"},{"location":"guide/content-management/#akses-admin-panel","title":"Akses Admin Panel","text":""},{"location":"guide/content-management/#login-ke-admin","title":"Login ke Admin","text":"<ol> <li>Buka browser dan akses <code>http://localhost:8000/admin</code></li> <li>Masukkan kredensial:</li> <li>Username: <code>rhamaa</code></li> <li>Password: <code>admin</code></li> </ol> <p>Keamanan</p> <p>Segera ganti password default setelah login pertama kali!</p>"},{"location":"guide/content-management/#dashboard-admin","title":"Dashboard Admin","text":"<p>Setelah login, Anda akan melihat dashboard dengan menu utama: - Pages - Mengelola halaman website - Images - Mengelola gambar - Documents - Mengelola dokumen - Snippets - Mengelola snippet konten - Users - Mengelola user - Settings - Pengaturan situs</p>"},{"location":"guide/content-management/#mengelola-halaman","title":"Mengelola Halaman","text":""},{"location":"guide/content-management/#struktur-halaman","title":"Struktur Halaman","text":"<p>Wagtail menggunakan struktur tree untuk halaman: <pre><code>Root\n\u2514\u2500\u2500 Home (Homepage)\n    \u251c\u2500\u2500 About\n    \u251c\u2500\u2500 Services\n    \u2502   \u251c\u2500\u2500 Web Development\n    \u2502   \u2514\u2500\u2500 Mobile Apps\n    \u2514\u2500\u2500 Contact\n</code></pre></p>"},{"location":"guide/content-management/#membuat-halaman-baru","title":"Membuat Halaman Baru","text":"<ol> <li>Navigasi ke Pages</li> <li>Klik \"Pages\" di menu utama</li> <li> <p>Pilih parent page (biasanya Home)</p> </li> <li> <p>Pilih Tipe Halaman</p> </li> <li>Klik \"Add child page\"</li> <li> <p>Pilih tipe halaman (Content Page, Landing Page, dll)</p> </li> <li> <p>Isi Konten</p> </li> <li>Title: Judul halaman</li> <li>Slug: URL slug (otomatis generate dari title)</li> <li> <p>Content: Isi konten menggunakan StreamField</p> </li> <li> <p>Pengaturan SEO</p> </li> <li>Search description: Meta description untuk SEO</li> <li> <p>Tags: Tag untuk kategorisasi</p> </li> <li> <p>Publikasi</p> </li> <li>Save draft: Simpan sebagai draft</li> <li>Publish: Publikasikan langsung</li> <li>Schedule: Jadwalkan publikasi</li> </ol>"},{"location":"guide/content-management/#edit-halaman-existing","title":"Edit Halaman Existing","text":"<ol> <li>Navigasi ke halaman yang ingin diedit</li> <li>Klik \"Edit\" di toolbar admin</li> <li>Lakukan perubahan</li> <li>Pilih action:</li> <li>Save draft: Simpan perubahan sebagai draft</li> <li>Publish: Publikasikan perubahan</li> <li>Replace current draft: Ganti draft yang ada</li> </ol>"},{"location":"guide/content-management/#mengelola-status-halaman","title":"Mengelola Status Halaman","text":""},{"location":"guide/content-management/#draft-vs-published","title":"Draft vs Published","text":"<ul> <li>Draft: Halaman belum dipublikasi, hanya bisa dilihat di admin</li> <li>Published: Halaman sudah live dan bisa diakses publik</li> <li>Scheduled: Halaman dijadwalkan untuk publikasi otomatis</li> </ul>"},{"location":"guide/content-management/#workflow-approval","title":"Workflow Approval","text":"<p>Untuk tim yang lebih besar, aktifkan workflow approval:</p> <ol> <li>Settings \u2192 Workflow</li> <li>Buat workflow baru</li> <li>Assign ke halaman atau section tertentu</li> <li>Set approver dan reviewer</li> </ol>"},{"location":"guide/content-management/#menggunakan-streamfield","title":"Menggunakan StreamField","text":""},{"location":"guide/content-management/#konsep-streamfield","title":"Konsep StreamField","text":"<p>StreamField memungkinkan editor membuat konten yang fleksibel dengan berbagai tipe blok.</p>"},{"location":"guide/content-management/#menambah-blok-konten","title":"Menambah Blok Konten","text":"<ol> <li>Klik tombol \"+\" di StreamField</li> <li>Pilih tipe blok:</li> <li>Heading: Judul section</li> <li>Paragraph: Teks paragraf</li> <li>Image: Gambar dengan caption</li> <li>Quote: Kutipan</li> <li> <p>Hero: Section hero dengan CTA</p> </li> <li> <p>Isi konten blok</p> </li> <li>Atur urutan dengan drag &amp; drop</li> <li>Duplikasi blok dengan tombol copy</li> <li>Hapus blok dengan tombol delete</li> </ol>"},{"location":"guide/content-management/#rich-text-editor","title":"Rich Text Editor","text":"<p>Untuk blok paragraph dan rich text:</p>"},{"location":"guide/content-management/#formatting-options","title":"Formatting Options","text":"<ul> <li>Bold dan Italic</li> <li>Heading levels (H2, H3, H4)</li> <li>Lists (bullet dan numbered)</li> <li>Links (internal dan external)</li> <li>Embed media</li> </ul>"},{"location":"guide/content-management/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ul> <li><code>Ctrl+B</code>: Bold</li> <li><code>Ctrl+I</code>: Italic</li> <li><code>Ctrl+K</code>: Insert link</li> <li><code>Ctrl+Z</code>: Undo</li> <li><code>Ctrl+Y</code>: Redo</li> </ul>"},{"location":"guide/content-management/#custom-blocks","title":"Custom Blocks","text":"<p>RhamaaCMS menyediakan custom blocks:</p>"},{"location":"guide/content-management/#hero-block","title":"Hero Block","text":"<ul> <li>Title: Judul utama</li> <li>Subtitle: Subjudul</li> <li>Background Image: Gambar latar</li> <li>CTA Button: Tombol call-to-action</li> </ul>"},{"location":"guide/content-management/#card-block","title":"Card Block","text":"<ul> <li>Title: Judul kartu</li> <li>Description: Deskripsi</li> <li>Image: Gambar kartu</li> <li>Link: URL tujuan</li> </ul>"},{"location":"guide/content-management/#gallery-block","title":"Gallery Block","text":"<ul> <li>Title: Judul galeri</li> <li>Images: Multiple gambar</li> <li>Layout: Grid atau carousel</li> </ul>"},{"location":"guide/content-management/#mengelola-media","title":"Mengelola Media","text":""},{"location":"guide/content-management/#upload-gambar","title":"Upload Gambar","text":"<ol> <li>Navigasi ke Images</li> <li>Klik \"Add an image\"</li> <li>Upload file (drag &amp; drop atau browse)</li> <li>Isi metadata:</li> <li>Title: Nama gambar</li> <li>Alt text: Untuk accessibility</li> <li>Tags: Untuk kategorisasi</li> </ol>"},{"location":"guide/content-management/#optimasi-gambar","title":"Optimasi Gambar","text":""},{"location":"guide/content-management/#format-yang-didukung","title":"Format yang Didukung","text":"<ul> <li>JPEG: Untuk foto</li> <li>PNG: Untuk gambar dengan transparency</li> <li>WebP: Format modern untuk web</li> <li>SVG: Untuk icon dan logo</li> </ul>"},{"location":"guide/content-management/#best-practices","title":"Best Practices","text":"<ul> <li>Gunakan alt text yang deskriptif</li> <li>Compress gambar sebelum upload</li> <li>Gunakan format yang tepat</li> <li>Pertimbangkan responsive images</li> </ul>"},{"location":"guide/content-management/#upload-dokumen","title":"Upload Dokumen","text":"<ol> <li>Navigasi ke Documents</li> <li>Klik \"Add a document\"</li> <li>Upload file</li> <li>Isi informasi:</li> <li>Title: Nama dokumen</li> <li>Tags: Kategorisasi</li> </ol>"},{"location":"guide/content-management/#format-dokumen","title":"Format Dokumen","text":"<ul> <li>PDF, DOC, DOCX</li> <li>XLS, XLSX</li> <li>PPT, PPTX</li> <li>TXT, CSV</li> </ul>"},{"location":"guide/content-management/#mengelola-menu-navigation","title":"Mengelola Menu Navigation","text":""},{"location":"guide/content-management/#main-navigation","title":"Main Navigation","text":"<p>Edit navigation menu di: 1. Settings \u2192 Navigation 2. Add menu item:    - Link to page: Link ke halaman internal    - Custom URL: Link eksternal    - Label: Teks yang ditampilkan</p>"},{"location":"guide/content-management/#footer-links","title":"Footer Links","text":"<p>Kelola footer links di: 1. Snippets \u2192 Footer Links 2. Add footer link 3. Atur urutan dengan drag &amp; drop</p>"},{"location":"guide/content-management/#seo-dan-metadata","title":"SEO dan Metadata","text":""},{"location":"guide/content-management/#page-level-seo","title":"Page-level SEO","text":"<p>Untuk setiap halaman: 1. Promote tab:    - Search description: Meta description    - Tags: Content tags    - Featured image: Social media image</p> <ol> <li>Settings tab:</li> <li>Show in menus: Tampilkan di navigation</li> <li>Privacy: Public atau private</li> </ol>"},{"location":"guide/content-management/#site-wide-seo","title":"Site-wide SEO","text":"<ol> <li>Settings \u2192 Sites</li> <li>Edit site:</li> <li>Site name: Nama situs</li> <li>Hostname: Domain utama</li> </ol>"},{"location":"guide/content-management/#social-media","title":"Social Media","text":"<p>Konfigurasi social media metadata: - Open Graph tags - Twitter Card tags - Structured data (JSON-LD)</p>"},{"location":"guide/content-management/#workflow-dan-collaboration","title":"Workflow dan Collaboration","text":""},{"location":"guide/content-management/#user-roles","title":"User Roles","text":"<p>RhamaaCMS mendukung berbagai user roles:</p>"},{"location":"guide/content-management/#editor","title":"Editor","text":"<ul> <li>Buat dan edit konten</li> <li>Tidak bisa publish tanpa approval</li> </ul>"},{"location":"guide/content-management/#moderator","title":"Moderator","text":"<ul> <li>Review dan approve konten</li> <li>Manage user permissions</li> </ul>"},{"location":"guide/content-management/#administrator","title":"Administrator","text":"<ul> <li>Full access ke semua fitur</li> <li>Manage site settings</li> </ul>"},{"location":"guide/content-management/#comments-dan-review","title":"Comments dan Review","text":"<ol> <li>Enable moderation di page settings</li> <li>Add comments untuk feedback</li> <li>Track changes dengan revision history</li> </ol>"},{"location":"guide/content-management/#revision-history","title":"Revision History","text":"<p>Setiap halaman menyimpan history: 1. Klik \"History\" di page editor 2. Compare versions untuk melihat perubahan 3. Revert ke versi sebelumnya jika diperlukan</p>"},{"location":"guide/content-management/#tips-dan-best-practices","title":"Tips dan Best Practices","text":""},{"location":"guide/content-management/#content-strategy","title":"Content Strategy","text":"<ol> <li>Rencanakan struktur sebelum membuat konten</li> <li>Gunakan consistent naming untuk halaman</li> <li>Optimize untuk SEO dengan keyword research</li> <li>Regular content audit untuk update konten lama</li> </ol>"},{"location":"guide/content-management/#performance","title":"Performance","text":"<ol> <li>Optimize images sebelum upload</li> <li>Gunakan caching untuk konten yang jarang berubah</li> <li>Minimize plugins yang tidak perlu</li> <li>Regular database cleanup</li> </ol>"},{"location":"guide/content-management/#accessibility","title":"Accessibility","text":"<ol> <li>Gunakan alt text untuk semua gambar</li> <li>Proper heading hierarchy (H1, H2, H3)</li> <li>Descriptive link text</li> <li>Color contrast yang cukup</li> </ol>"},{"location":"guide/content-management/#security","title":"Security","text":"<ol> <li>Regular password updates</li> <li>Limit user permissions sesuai kebutuhan</li> <li>Monitor login attempts</li> <li>Keep system updated</li> </ol>"},{"location":"guide/content-management/#troubleshooting","title":"Troubleshooting","text":""},{"location":"guide/content-management/#konten-tidak-muncul","title":"Konten Tidak Muncul","text":"<p>Kemungkinan penyebab: - Halaman masih draft - Cache belum clear - Template error</p> <p>Solusi: 1. Check status publikasi 2. Clear cache browser 3. Check error logs</p>"},{"location":"guide/content-management/#gambar-tidak-loading","title":"Gambar Tidak Loading","text":"<p>Kemungkinan penyebab: - File terlalu besar - Format tidak didukung - Permission error</p> <p>Solusi: 1. Compress gambar 2. Convert ke format yang didukung 3. Check file permissions</p>"},{"location":"guide/content-management/#editor-tidak-responsive","title":"Editor Tidak Responsive","text":"<p>Solusi: 1. Clear browser cache 2. Disable browser extensions 3. Try different browser 4. Check JavaScript errors</p>"},{"location":"guide/content-management/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah menguasai content management, lanjutkan ke Kustomisasi Template untuk mempelajari cara mengkustomisasi tampilan website.</p>"},{"location":"guide/pages-blocks/","title":"Halaman dan Blok","text":"<p>RhamaaCMS menyediakan sistem halaman dan blok yang fleksibel untuk membangun konten yang dinamis dan mudah dikelola.</p>"},{"location":"guide/pages-blocks/#konsep-dasar","title":"Konsep Dasar","text":""},{"location":"guide/pages-blocks/#pages-halaman","title":"Pages (Halaman)","text":"<p>Pages adalah unit konten utama di Wagtail. Setiap page memiliki: - URL - Alamat web halaman - Template - File HTML untuk rendering - Fields - Data yang dapat diedit di admin - Hierarchy - Struktur parent-child</p>"},{"location":"guide/pages-blocks/#blocks-blok","title":"Blocks (Blok)","text":"<p>Blocks adalah komponen konten yang dapat digunakan kembali: - StreamField - Field yang berisi multiple blocks - StructBlock - Block dengan multiple fields - ListBlock - Block yang berisi list items - RichTextBlock - Block untuk rich text</p>"},{"location":"guide/pages-blocks/#page-models","title":"Page Models","text":""},{"location":"guide/pages-blocks/#homepage-model","title":"HomePage Model","text":"<p>Model untuk halaman utama website:</p> <pre><code># home/models.py\nfrom wagtail.models import Page\nfrom wagtail.fields import RichTextField, StreamField\nfrom wagtail.admin.panels import FieldPanel\nfrom wagtail import blocks\n\nclass HomePage(Page):\n    # Hero section\n    hero_title = models.CharField(max_length=255, blank=True)\n    hero_subtitle = models.TextField(blank=True)\n    hero_image = models.ForeignKey(\n        'wagtailimages.Image',\n        null=True,\n        blank=True,\n        on_delete=models.SET_NULL,\n        related_name='+'\n    )\n\n    # Main content\n    body = StreamField([\n        ('heading', blocks.CharBlock(form_classname=\"title\")),\n        ('paragraph', blocks.RichTextBlock()),\n        ('image', ImageChooserBlock()),\n        ('quote', blocks.BlockQuoteBlock()),\n    ], blank=True, use_json_field=True)\n\n    content_panels = Page.content_panels + [\n        FieldPanel('hero_title'),\n        FieldPanel('hero_subtitle'),\n        FieldPanel('hero_image'),\n        FieldPanel('body'),\n    ]\n</code></pre>"},{"location":"guide/pages-blocks/#contentpage-model","title":"ContentPage Model","text":"<p>Model untuk halaman konten umum:</p> <pre><code>class ContentPage(Page):\n    date = models.DateField(\"Post date\")\n    intro = models.CharField(max_length=250)\n    body = RichTextField(blank=True)\n\n    # Featured image\n    featured_image = models.ForeignKey(\n        'wagtailimages.Image',\n        null=True,\n        blank=True,\n        on_delete=models.SET_NULL,\n        related_name='+'\n    )\n\n    content_panels = Page.content_panels + [\n        FieldPanel('date'),\n        FieldPanel('intro'),\n        FieldPanel('featured_image'),\n        FieldPanel('body'),\n    ]\n\n    # SEO settings\n    promote_panels = Page.promote_panels + [\n        FieldPanel('featured_image'),\n    ]\n</code></pre>"},{"location":"guide/pages-blocks/#custom-blocks","title":"Custom Blocks","text":""},{"location":"guide/pages-blocks/#hero-block","title":"Hero Block","text":"<p>Block untuk section hero:</p> <pre><code># blocks.py\nfrom wagtail import blocks\nfrom wagtail.images.blocks import ImageChooserBlock\n\nclass HeroBlock(blocks.StructBlock):\n    title = blocks.CharBlock(max_length=255, help_text=\"Hero title\")\n    subtitle = blocks.TextBlock(help_text=\"Hero subtitle\")\n    image = ImageChooserBlock(required=False)\n    cta_text = blocks.CharBlock(max_length=50, required=False)\n    cta_url = blocks.URLBlock(required=False)\n\n    class Meta:\n        template = 'blocks/hero_block.html'\n        icon = 'image'\n        label = 'Hero Section'\n</code></pre>"},{"location":"guide/pages-blocks/#card-block","title":"Card Block","text":"<p>Block untuk menampilkan kartu konten:</p> <pre><code>class CardBlock(blocks.StructBlock):\n    title = blocks.CharBlock(max_length=100)\n    description = blocks.TextBlock()\n    image = ImageChooserBlock(required=False)\n    link = blocks.URLBlock(required=False)\n\n    class Meta:\n        template = 'blocks/card_block.html'\n        icon = 'doc-full'\n        label = 'Card'\n</code></pre>"},{"location":"guide/pages-blocks/#gallery-block","title":"Gallery Block","text":"<p>Block untuk galeri gambar:</p> <pre><code>class GalleryBlock(blocks.StructBlock):\n    title = blocks.CharBlock(max_length=100, required=False)\n    images = blocks.ListBlock(ImageChooserBlock())\n\n    class Meta:\n        template = 'blocks/gallery_block.html'\n        icon = 'image'\n        label = 'Gallery'\n</code></pre>"},{"location":"guide/pages-blocks/#streamfield-configuration","title":"StreamField Configuration","text":""},{"location":"guide/pages-blocks/#basic-streamfield","title":"Basic StreamField","text":"<pre><code>from wagtail.fields import StreamField\nfrom wagtail import blocks\n\nbody = StreamField([\n    ('heading', blocks.CharBlock(form_classname=\"title\")),\n    ('paragraph', blocks.RichTextBlock()),\n    ('image', ImageChooserBlock()),\n    ('hero', HeroBlock()),\n    ('cards', blocks.ListBlock(CardBlock())),\n    ('gallery', GalleryBlock()),\n], blank=True, use_json_field=True)\n</code></pre>"},{"location":"guide/pages-blocks/#advanced-streamfield","title":"Advanced StreamField","text":"<pre><code>body = StreamField([\n    ('text', blocks.StructBlock([\n        ('heading', blocks.CharBlock()),\n        ('content', blocks.RichTextBlock()),\n        ('alignment', blocks.ChoiceBlock(choices=[\n            ('left', 'Left'),\n            ('center', 'Center'),\n            ('right', 'Right'),\n        ])),\n    ])),\n    ('media', blocks.StructBlock([\n        ('type', blocks.ChoiceBlock(choices=[\n            ('image', 'Image'),\n            ('video', 'Video'),\n            ('embed', 'Embed'),\n        ])),\n        ('image', ImageChooserBlock(required=False)),\n        ('video', blocks.URLBlock(required=False)),\n        ('embed', blocks.RawHTMLBlock(required=False)),\n    ])),\n], blank=True, use_json_field=True)\n</code></pre>"},{"location":"guide/pages-blocks/#block-templates","title":"Block Templates","text":""},{"location":"guide/pages-blocks/#hero-block-template","title":"Hero Block Template","text":"<pre><code>&lt;!-- templates/blocks/hero_block.html --&gt;\n&lt;section class=\"hero\"&gt;\n    {% if value.image %}\n        &lt;div class=\"hero-image\"&gt;\n            {% image value.image fill-1200x600 %}\n        &lt;/div&gt;\n    {% endif %}\n\n    &lt;div class=\"hero-content\"&gt;\n        &lt;h1 class=\"hero-title\"&gt;{{ value.title }}&lt;/h1&gt;\n        {% if value.subtitle %}\n            &lt;p class=\"hero-subtitle\"&gt;{{ value.subtitle }}&lt;/p&gt;\n        {% endif %}\n\n        {% if value.cta_text and value.cta_url %}\n            &lt;a href=\"{{ value.cta_url }}\" class=\"btn btn-primary\"&gt;\n                {{ value.cta_text }}\n            &lt;/a&gt;\n        {% endif %}\n    &lt;/div&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"guide/pages-blocks/#card-block-template","title":"Card Block Template","text":"<pre><code>&lt;!-- templates/blocks/card_block.html --&gt;\n&lt;div class=\"card\"&gt;\n    {% if value.image %}\n        &lt;div class=\"card-image\"&gt;\n            {% image value.image fill-300x200 %}\n        &lt;/div&gt;\n    {% endif %}\n\n    &lt;div class=\"card-content\"&gt;\n        &lt;h3 class=\"card-title\"&gt;{{ value.title }}&lt;/h3&gt;\n        &lt;p class=\"card-description\"&gt;{{ value.description }}&lt;/p&gt;\n\n        {% if value.link %}\n            &lt;a href=\"{{ value.link }}\" class=\"card-link\"&gt;\n                Read More\n            &lt;/a&gt;\n        {% endif %}\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"guide/pages-blocks/#page-templates","title":"Page Templates","text":""},{"location":"guide/pages-blocks/#homepage-template","title":"HomePage Template","text":"<pre><code>&lt;!-- templates/home/home_page.html --&gt;\n{% extends \"base.html\" %}\n{% load wagtailcore_tags wagtailimages_tags %}\n\n{% block content %}\n    &lt;!-- Hero Section --&gt;\n    {% if page.hero_title %}\n        &lt;section class=\"hero\"&gt;\n            {% if page.hero_image %}\n                {% image page.hero_image fill-1200x600 as hero_img %}\n                &lt;div class=\"hero-image\"&gt;\n                    &lt;img src=\"{{ hero_img.url }}\" alt=\"{{ page.hero_title }}\"&gt;\n                &lt;/div&gt;\n            {% endif %}\n\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h1&gt;{{ page.hero_title }}&lt;/h1&gt;\n                {% if page.hero_subtitle %}\n                    &lt;p&gt;{{ page.hero_subtitle }}&lt;/p&gt;\n                {% endif %}\n            &lt;/div&gt;\n        &lt;/section&gt;\n    {% endif %}\n\n    &lt;!-- Main Content --&gt;\n    &lt;main class=\"main-content\"&gt;\n        {% for block in page.body %}\n            {% include_block block %}\n        {% endfor %}\n    &lt;/main&gt;\n{% endblock %}\n</code></pre>"},{"location":"guide/pages-blocks/#contentpage-template","title":"ContentPage Template","text":"<pre><code>&lt;!-- templates/home/content_page.html --&gt;\n{% extends \"base.html\" %}\n{% load wagtailcore_tags wagtailimages_tags %}\n\n{% block content %}\n    &lt;article class=\"content-page\"&gt;\n        &lt;header class=\"page-header\"&gt;\n            &lt;h1&gt;{{ page.title }}&lt;/h1&gt;\n            &lt;p class=\"page-date\"&gt;{{ page.date }}&lt;/p&gt;\n\n            {% if page.featured_image %}\n                &lt;div class=\"featured-image\"&gt;\n                    {% image page.featured_image fill-800x400 %}\n                &lt;/div&gt;\n            {% endif %}\n\n            {% if page.intro %}\n                &lt;p class=\"page-intro\"&gt;{{ page.intro }}&lt;/p&gt;\n            {% endif %}\n        &lt;/header&gt;\n\n        &lt;div class=\"page-content\"&gt;\n            {{ page.body|richtext }}\n        &lt;/div&gt;\n    &lt;/article&gt;\n{% endblock %}\n</code></pre>"},{"location":"guide/pages-blocks/#admin-interface-customization","title":"Admin Interface Customization","text":""},{"location":"guide/pages-blocks/#panel-configuration","title":"Panel Configuration","text":"<pre><code>class HomePage(Page):\n    # ... fields ...\n\n    content_panels = Page.content_panels + [\n        MultiFieldPanel([\n            FieldPanel('hero_title'),\n            FieldPanel('hero_subtitle'),\n            FieldPanel('hero_image'),\n        ], heading=\"Hero Section\"),\n        FieldPanel('body'),\n    ]\n\n    promote_panels = Page.promote_panels + [\n        FieldPanel('hero_image'),\n    ]\n\n    settings_panels = Page.settings_panels + [\n        FieldPanel('show_in_menus'),\n    ]\n</code></pre>"},{"location":"guide/pages-blocks/#custom-edit-handlers","title":"Custom Edit Handlers","text":"<pre><code>from wagtail.admin.panels import TabbedInterface, ObjectList\n\nclass HomePage(Page):\n    # ... fields ...\n\n    edit_handler = TabbedInterface([\n        ObjectList(content_panels, heading='Content'),\n        ObjectList(promote_panels, heading='Promote'),\n        ObjectList(settings_panels, heading='Settings'),\n    ])\n</code></pre>"},{"location":"guide/pages-blocks/#best-practices","title":"Best Practices","text":""},{"location":"guide/pages-blocks/#1-block-design","title":"1. Block Design","text":"<ul> <li>Buat blocks yang reusable dan modular</li> <li>Gunakan nama yang deskriptif</li> <li>Sediakan help text untuk editor</li> <li>Implementasi validation yang tepat</li> </ul>"},{"location":"guide/pages-blocks/#2-template-organization","title":"2. Template Organization","text":"<ul> <li>Pisahkan block templates dari page templates</li> <li>Gunakan consistent naming convention</li> <li>Implementasi responsive design</li> <li>Optimasi untuk performance</li> </ul>"},{"location":"guide/pages-blocks/#3-content-structure","title":"3. Content Structure","text":"<ul> <li>Rencanakan hierarchy halaman dengan baik</li> <li>Gunakan StreamField untuk konten yang fleksibel</li> <li>Implementasi SEO best practices</li> <li>Sediakan preview functionality</li> </ul>"},{"location":"guide/pages-blocks/#4-admin-experience","title":"4. Admin Experience","text":"<ul> <li>Organisir fields dalam panels yang logis</li> <li>Gunakan help text dan labels yang jelas</li> <li>Implementasi custom widgets jika diperlukan</li> <li>Test admin interface secara regular</li> </ul>"},{"location":"guide/pages-blocks/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah memahami halaman dan blok, lanjutkan ke Mengelola Konten untuk mempelajari cara menggunakan admin interface.</p>"},{"location":"guide/project-structure/","title":"Struktur Proyek","text":"<p>Memahami struktur proyek RhamaaCMS akan membantu Anda mengembangkan dan mengkustomisasi aplikasi dengan lebih efektif.</p>"},{"location":"guide/project-structure/#struktur-direktori-utama","title":"Struktur Direktori Utama","text":"<pre><code>myproject/\n\u251c\u2500\u2500 myproject/                 # Django project directory\n\u2502   \u251c\u2500\u2500 settings/             # Settings modules\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 base.py          # Base settings\n\u2502   \u2502   \u251c\u2500\u2500 dev.py           # Development settings\n\u2502   \u2502   \u2514\u2500\u2500 production.py    # Production settings\n\u2502   \u251c\u2500\u2500 urls.py              # URL configuration\n\u2502   \u2514\u2500\u2500 wsgi.py              # WSGI configuration\n\u251c\u2500\u2500 home/                     # Home app\n\u2502   \u251c\u2500\u2500 models.py            # Page models\n\u2502   \u251c\u2500\u2500 templates/           # Templates\n\u2502   \u2514\u2500\u2500 migrations/          # Database migrations\n\u251c\u2500\u2500 search/                   # Search functionality\n\u251c\u2500\u2500 static/                   # Static files (CSS, JS, images)\n\u251c\u2500\u2500 templates/               # Global templates\n\u251c\u2500\u2500 media/                   # User uploaded files\n\u251c\u2500\u2500 requirements.txt         # Python dependencies\n\u251c\u2500\u2500 manage.py               # Django management script\n\u251c\u2500\u2500 Makefile                # Development commands\n\u2514\u2500\u2500 README.md               # Project documentation\n</code></pre>"},{"location":"guide/project-structure/#apps-django","title":"Apps Django","text":""},{"location":"guide/project-structure/#home-app","title":"Home App","text":"<p>App utama yang berisi halaman homepage dan model dasar:</p> <pre><code># home/models.py\nfrom wagtail.models import Page\nfrom wagtail.fields import RichTextField\nfrom wagtail.admin.panels import FieldPanel\n\nclass HomePage(Page):\n    body = RichTextField(blank=True)\n\n    content_panels = Page.content_panels + [\n        FieldPanel('body'),\n    ]\n</code></pre> <p>File penting: - <code>models.py</code> - Model halaman - <code>templates/home/</code> - Template halaman - <code>migrations/</code> - Database migrations</p>"},{"location":"guide/project-structure/#search-app","title":"Search App","text":"<p>Menyediakan fungsi pencarian di seluruh situs:</p> <pre><code># search/views.py\nfrom django.shortcuts import render\nfrom wagtail.search.models import Query\n\ndef search(request):\n    search_query = request.GET.get('query', None)\n    # Search logic here\n    return render(request, 'search/search.html', context)\n</code></pre>"},{"location":"guide/project-structure/#settings-configuration","title":"Settings Configuration","text":""},{"location":"guide/project-structure/#base-settings-settingsbasepy","title":"Base Settings (<code>settings/base.py</code>)","text":"<p>Konfigurasi dasar yang digunakan di semua environment:</p> <pre><code># Core Django settings\nINSTALLED_APPS = [\n    'home',\n    'search',\n    'wagtail.contrib.forms',\n    'wagtail.contrib.redirects',\n    'wagtail.embeds',\n    'wagtail.sites',\n    'wagtail.users',\n    'wagtail.snippets',\n    'wagtail.documents',\n    'wagtail.images',\n    'wagtail.search',\n    'wagtail.admin',\n    'wagtail',\n    'modelcluster',\n    'taggit',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n\n# Wagtail settings\nWAGTAIL_SITE_NAME = \"RhamaaCMS\"\nWAGTAILADMIN_BASE_URL = 'http://localhost:8000'\n</code></pre>"},{"location":"guide/project-structure/#development-settings-settingsdevpy","title":"Development Settings (<code>settings/dev.py</code>)","text":"<p>Konfigurasi khusus untuk development:</p> <pre><code>from .base import *\n\nDEBUG = True\nALLOWED_HOSTS = ['localhost', '127.0.0.1']\n\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n# Email backend untuk development\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n</code></pre>"},{"location":"guide/project-structure/#production-settings-settingsproductionpy","title":"Production Settings (<code>settings/production.py</code>)","text":"<p>Konfigurasi untuk production environment:</p> <pre><code>from .base import *\nimport os\n\nDEBUG = False\nALLOWED_HOSTS = ['yourdomain.com']\n\n# Security settings\nSECURE_SSL_REDIRECT = True\nSECURE_HSTS_SECONDS = 31536000\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\nSECURE_HSTS_PRELOAD = True\n</code></pre>"},{"location":"guide/project-structure/#templates-structure","title":"Templates Structure","text":""},{"location":"guide/project-structure/#global-templates-templates","title":"Global Templates (<code>templates/</code>)","text":"<p>Template yang digunakan di seluruh aplikasi:</p> <pre><code>templates/\n\u251c\u2500\u2500 base.html                # Base template\n\u251c\u2500\u2500 404.html                # Error 404 page\n\u251c\u2500\u2500 500.html                # Error 500 page\n\u2514\u2500\u2500 includes/               # Reusable template parts\n    \u251c\u2500\u2500 header.html\n    \u251c\u2500\u2500 footer.html\n    \u2514\u2500\u2500 navigation.html\n</code></pre>"},{"location":"guide/project-structure/#app-specific-templates","title":"App-specific Templates","text":"<p>Setiap app memiliki folder templates sendiri:</p> <pre><code>home/templates/home/\n\u251c\u2500\u2500 home_page.html          # Homepage template\n\u2514\u2500\u2500 includes/\n    \u2514\u2500\u2500 hero_section.html\n</code></pre>"},{"location":"guide/project-structure/#static-files","title":"Static Files","text":""},{"location":"guide/project-structure/#struktur-static-files","title":"Struktur Static Files","text":"<pre><code>static/\n\u251c\u2500\u2500 css/\n\u2502   \u251c\u2500\u2500 main.css           # Main stylesheet\n\u2502   \u2514\u2500\u2500 components/        # Component styles\n\u251c\u2500\u2500 js/\n\u2502   \u251c\u2500\u2500 main.js           # Main JavaScript\n\u2502   \u2514\u2500\u2500 components/       # Component scripts\n\u251c\u2500\u2500 images/\n\u2502   \u251c\u2500\u2500 logo.png\n\u2502   \u2514\u2500\u2500 icons/\n\u2514\u2500\u2500 fonts/\n</code></pre>"},{"location":"guide/project-structure/#css-architecture","title":"CSS Architecture","text":"<p>RhamaaCMS menggunakan pendekatan modular untuk CSS:</p> <pre><code>/* static/css/main.css */\n@import 'base/reset.css';\n@import 'base/typography.css';\n@import 'components/header.css';\n@import 'components/footer.css';\n@import 'pages/home.css';\n</code></pre>"},{"location":"guide/project-structure/#media-files","title":"Media Files","text":"<p>Folder <code>media/</code> menyimpan file yang diupload user:</p> <pre><code>media/\n\u251c\u2500\u2500 documents/             # Document uploads\n\u251c\u2500\u2500 images/               # Image uploads\n\u2502   \u251c\u2500\u2500 original/        # Original images\n\u2502   \u2514\u2500\u2500 thumbnails/      # Generated thumbnails\n\u2514\u2500\u2500 other/               # Other file types\n</code></pre>"},{"location":"guide/project-structure/#database-migrations","title":"Database Migrations","text":"<p>Migrations disimpan di folder <code>migrations/</code> setiap app:</p> <pre><code>home/migrations/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 0001_initial.py       # Initial migration\n\u251c\u2500\u2500 0002_add_hero_section.py\n\u2514\u2500\u2500 0003_update_page_model.py\n</code></pre>"},{"location":"guide/project-structure/#configuration-files","title":"Configuration Files","text":""},{"location":"guide/project-structure/#makefile","title":"Makefile","text":"<p>Berisi perintah-perintah development yang sering digunakan:</p> <pre><code>.PHONY: start install migrate load-data\n\nstart:\n    python manage.py runserver\n\ninstall:\n    pip install -r requirements.txt\n\nmigrate:\n    python manage.py migrate\n\nload-data:\n    python manage.py loaddata fixtures/initial_data.json\n</code></pre>"},{"location":"guide/project-structure/#requirementstxt","title":"Requirements.txt","text":"<p>Daftar dependencies Python:</p> <pre><code>Django&gt;=4.2,&lt;5.0\nwagtail&gt;=5.0,&lt;6.0\npsycopg2-binary&gt;=2.9\nPillow&gt;=9.0\ndjango-extensions&gt;=3.2\n</code></pre>"},{"location":"guide/project-structure/#best-practices","title":"Best Practices","text":""},{"location":"guide/project-structure/#1-organisasi-apps","title":"1. Organisasi Apps","text":"<ul> <li>Buat app terpisah untuk setiap fungsionalitas utama</li> <li>Gunakan nama yang deskriptif</li> <li>Ikuti konvensi Django</li> </ul>"},{"location":"guide/project-structure/#2-settings-management","title":"2. Settings Management","text":"<ul> <li>Pisahkan settings berdasarkan environment</li> <li>Gunakan environment variables untuk data sensitif</li> <li>Dokumentasikan semua settings</li> </ul>"},{"location":"guide/project-structure/#3-template-organization","title":"3. Template Organization","text":"<ul> <li>Gunakan template inheritance</li> <li>Buat komponen yang reusable</li> <li>Pisahkan logic dari presentation</li> </ul>"},{"location":"guide/project-structure/#4-static-files","title":"4. Static Files","text":"<ul> <li>Organisir berdasarkan tipe dan komponen</li> <li>Gunakan build tools untuk optimasi</li> <li>Implementasi versioning untuk caching</li> </ul>"},{"location":"guide/project-structure/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah memahami struktur proyek, lanjutkan ke Halaman dan Blok untuk mempelajari cara membuat konten.</p>"},{"location":"guide/template-customization/","title":"Kustomisasi Template","text":"<p>Panduan untuk mengkustomisasi tampilan dan template RhamaaCMS sesuai kebutuhan proyek Anda.</p>"},{"location":"guide/template-customization/#struktur-template","title":"Struktur Template","text":""},{"location":"guide/template-customization/#template-hierarchy","title":"Template Hierarchy","text":"<p>RhamaaCMS menggunakan template inheritance Django:</p> <pre><code>templates/\n\u251c\u2500\u2500 base.html              # Base template\n\u251c\u2500\u2500 home/\n\u2502   \u251c\u2500\u2500 home_page.html     # Homepage template\n\u2502   \u2514\u2500\u2500 content_page.html  # Content page template\n\u251c\u2500\u2500 blocks/\n\u2502   \u251c\u2500\u2500 hero_block.html    # Hero section\n\u2502   \u251c\u2500\u2500 card_block.html    # Card component\n\u2502   \u2514\u2500\u2500 gallery_block.html # Gallery component\n\u2514\u2500\u2500 includes/\n    \u251c\u2500\u2500 header.html        # Site header\n    \u251c\u2500\u2500 footer.html        # Site footer\n    \u2514\u2500\u2500 navigation.html    # Navigation menu\n</code></pre>"},{"location":"guide/template-customization/#base-template","title":"Base Template","text":"<p>Template dasar yang digunakan semua halaman:</p> <pre><code>&lt;!-- templates/base.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"id\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{% block title %}{{ page.title }} - {{ settings.site.site_name }}{% endblock %}&lt;/title&gt;\n\n    &lt;!-- SEO Meta Tags --&gt;\n    &lt;meta name=\"description\" content=\"{% block meta_description %}{{ page.search_description }}{% endblock %}\"&gt;\n\n    &lt;!-- CSS --&gt;\n    {% load static %}\n    &lt;link rel=\"stylesheet\" href=\"{% static 'css/main.css' %}\"&gt;\n\n    {% block extra_css %}{% endblock %}\n&lt;/head&gt;\n&lt;body class=\"{% block body_class %}{% endblock %}\"&gt;\n    {% include 'includes/header.html' %}\n\n    &lt;main&gt;\n        {% block content %}{% endblock %}\n    &lt;/main&gt;\n\n    {% include 'includes/footer.html' %}\n\n    &lt;!-- JavaScript --&gt;\n    &lt;script src=\"{% static 'js/main.js' %}\"&gt;&lt;/script&gt;\n    {% block extra_js %}{% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"guide/template-customization/#kustomisasi-css","title":"Kustomisasi CSS","text":""},{"location":"guide/template-customization/#css-architecture","title":"CSS Architecture","text":"<p>RhamaaCMS menggunakan pendekatan modular:</p> <pre><code>/* static/css/main.css */\n\n/* Base styles */\n@import 'base/reset.css';\n@import 'base/typography.css';\n@import 'base/variables.css';\n\n/* Components */\n@import 'components/header.css';\n@import 'components/navigation.css';\n@import 'components/hero.css';\n@import 'components/cards.css';\n@import 'components/footer.css';\n\n/* Pages */\n@import 'pages/home.css';\n@import 'pages/content.css';\n\n/* Utilities */\n@import 'utilities/spacing.css';\n@import 'utilities/responsive.css';\n</code></pre>"},{"location":"guide/template-customization/#css-variables","title":"CSS Variables","text":"<p>Gunakan CSS custom properties untuk konsistensi:</p> <pre><code>/* static/css/base/variables.css */\n:root {\n  /* Colors */\n  --primary-color: #2563eb;\n  --secondary-color: #64748b;\n  --accent-color: #f59e0b;\n  --text-color: #1f2937;\n  --bg-color: #ffffff;\n\n  /* Typography */\n  --font-family: 'Inter', sans-serif;\n  --font-size-base: 16px;\n  --line-height-base: 1.6;\n\n  /* Spacing */\n  --spacing-xs: 0.5rem;\n  --spacing-sm: 1rem;\n  --spacing-md: 1.5rem;\n  --spacing-lg: 2rem;\n  --spacing-xl: 3rem;\n\n  /* Breakpoints */\n  --breakpoint-sm: 640px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 1024px;\n  --breakpoint-xl: 1280px;\n}\n</code></pre>"},{"location":"guide/template-customization/#component-styling","title":"Component Styling","text":""},{"location":"guide/template-customization/#header-component","title":"Header Component","text":"<pre><code>/* static/css/components/header.css */\n.header {\n  background: var(--bg-color);\n  border-bottom: 1px solid #e5e7eb;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.header__container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 var(--spacing-md);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n}\n\n.header__logo {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--primary-color);\n  text-decoration: none;\n}\n\n.header__nav {\n  display: flex;\n  gap: var(--spacing-md);\n}\n\n.header__nav-link {\n  color: var(--text-color);\n  text-decoration: none;\n  font-weight: 500;\n  transition: color 0.2s;\n}\n\n.header__nav-link:hover {\n  color: var(--primary-color);\n}\n\n/* Mobile responsive */\n@media (max-width: 768px) {\n  .header__nav {\n    display: none;\n  }\n}\n</code></pre>"},{"location":"guide/template-customization/#hero-section","title":"Hero Section","text":"<pre><code>/* static/css/components/hero.css */\n.hero {\n  position: relative;\n  min-height: 60vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n  color: white;\n}\n\n.hero__content {\n  max-width: 800px;\n  padding: 0 var(--spacing-md);\n}\n\n.hero__title {\n  font-size: 3rem;\n  font-weight: 700;\n  margin-bottom: var(--spacing-md);\n  line-height: 1.2;\n}\n\n.hero__subtitle {\n  font-size: 1.25rem;\n  margin-bottom: var(--spacing-lg);\n  opacity: 0.9;\n}\n\n.hero__cta {\n  display: inline-block;\n  background: var(--accent-color);\n  color: white;\n  padding: var(--spacing-sm) var(--spacing-lg);\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 600;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.hero__cta:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .hero__title {\n    font-size: 2rem;\n  }\n\n  .hero__subtitle {\n    font-size: 1rem;\n  }\n}\n</code></pre>"},{"location":"guide/template-customization/#kustomisasi-template_1","title":"Kustomisasi Template","text":""},{"location":"guide/template-customization/#homepage-template","title":"Homepage Template","text":"<pre><code>&lt;!-- templates/home/home_page.html --&gt;\n{% extends \"base.html\" %}\n{% load wagtailcore_tags wagtailimages_tags %}\n\n{% block title %}{{ page.title }}{% endblock %}\n\n{% block body_class %}homepage{% endblock %}\n\n{% block content %}\n    &lt;!-- Hero Section --&gt;\n    {% if page.hero_title %}\n        &lt;section class=\"hero\"&gt;\n            {% if page.hero_image %}\n                &lt;div class=\"hero__background\"&gt;\n                    {% image page.hero_image fill-1920x1080 as hero_bg %}\n                    &lt;img src=\"{{ hero_bg.url }}\" alt=\"{{ page.hero_title }}\"&gt;\n                &lt;/div&gt;\n            {% endif %}\n\n            &lt;div class=\"hero__content\"&gt;\n                &lt;h1 class=\"hero__title\"&gt;{{ page.hero_title }}&lt;/h1&gt;\n                {% if page.hero_subtitle %}\n                    &lt;p class=\"hero__subtitle\"&gt;{{ page.hero_subtitle }}&lt;/p&gt;\n                {% endif %}\n                {% if page.hero_cta_text and page.hero_cta_url %}\n                    &lt;a href=\"{{ page.hero_cta_url }}\" class=\"hero__cta\"&gt;\n                        {{ page.hero_cta_text }}\n                    &lt;/a&gt;\n                {% endif %}\n            &lt;/div&gt;\n        &lt;/section&gt;\n    {% endif %}\n\n    &lt;!-- Main Content --&gt;\n    &lt;div class=\"main-content\"&gt;\n        {% for block in page.body %}\n            &lt;div class=\"content-block\"&gt;\n                {% include_block block %}\n            &lt;/div&gt;\n        {% endfor %}\n    &lt;/div&gt;\n{% endblock %}\n</code></pre>"},{"location":"guide/template-customization/#block-templates","title":"Block Templates","text":""},{"location":"guide/template-customization/#hero-block-template","title":"Hero Block Template","text":"<pre><code>&lt;!-- templates/blocks/hero_block.html --&gt;\n&lt;section class=\"hero-block\"&gt;\n    {% if value.image %}\n        &lt;div class=\"hero-block__image\"&gt;\n            {% load wagtailimages_tags %}\n            {% image value.image fill-1200x600 as hero_img %}\n            &lt;img src=\"{{ hero_img.url }}\" alt=\"{{ value.title }}\"&gt;\n        &lt;/div&gt;\n    {% endif %}\n\n    &lt;div class=\"hero-block__content\"&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;h2 class=\"hero-block__title\"&gt;{{ value.title }}&lt;/h2&gt;\n            {% if value.subtitle %}\n                &lt;p class=\"hero-block__subtitle\"&gt;{{ value.subtitle }}&lt;/p&gt;\n            {% endif %}\n            {% if value.cta_text and value.cta_url %}\n                &lt;a href=\"{{ value.cta_url }}\" class=\"btn btn--primary\"&gt;\n                    {{ value.cta_text }}\n                &lt;/a&gt;\n            {% endif %}\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"guide/template-customization/#card-block-template","title":"Card Block Template","text":"<pre><code>&lt;!-- templates/blocks/card_block.html --&gt;\n&lt;div class=\"card\"&gt;\n    {% if value.image %}\n        &lt;div class=\"card__image\"&gt;\n            {% load wagtailimages_tags %}\n            {% image value.image fill-400x250 as card_img %}\n            &lt;img src=\"{{ card_img.url }}\" alt=\"{{ value.title }}\"&gt;\n        &lt;/div&gt;\n    {% endif %}\n\n    &lt;div class=\"card__content\"&gt;\n        &lt;h3 class=\"card__title\"&gt;{{ value.title }}&lt;/h3&gt;\n        &lt;p class=\"card__description\"&gt;{{ value.description }}&lt;/p&gt;\n        {% if value.link %}\n            &lt;a href=\"{{ value.link }}\" class=\"card__link\"&gt;\n                Selengkapnya\n                &lt;svg class=\"card__arrow\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"&gt;\n                    &lt;path d=\"M8 0l8 8-8 8-1.5-1.5L12 9H0V7h12L6.5 1.5z\"/&gt;\n                &lt;/svg&gt;\n            &lt;/a&gt;\n        {% endif %}\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"guide/template-customization/#javascript-customization","title":"JavaScript Customization","text":""},{"location":"guide/template-customization/#main-javascript-file","title":"Main JavaScript File","text":"<pre><code>// static/js/main.js\n\n// Mobile navigation toggle\ndocument.addEventListener('DOMContentLoaded', function() {\n    const mobileToggle = document.querySelector('.mobile-toggle');\n    const navigation = document.querySelector('.header__nav');\n\n    if (mobileToggle &amp;&amp; navigation) {\n        mobileToggle.addEventListener('click', function() {\n            navigation.classList.toggle('is-open');\n        });\n    }\n\n    // Smooth scrolling for anchor links\n    const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\n    anchorLinks.forEach(link =&gt; {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            const target = document.querySelector(this.getAttribute('href'));\n            if (target) {\n                target.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start'\n                });\n            }\n        });\n    });\n\n    // Image lazy loading\n    if ('IntersectionObserver' in window) {\n        const imageObserver = new IntersectionObserver((entries, observer) =&gt; {\n            entries.forEach(entry =&gt; {\n                if (entry.isIntersecting) {\n                    const img = entry.target;\n                    img.src = img.dataset.src;\n                    img.classList.remove('lazy');\n                    observer.unobserve(img);\n                }\n            });\n        });\n\n        const lazyImages = document.querySelectorAll('img[data-src]');\n        lazyImages.forEach(img =&gt; imageObserver.observe(img));\n    }\n});\n</code></pre>"},{"location":"guide/template-customization/#responsive-design","title":"Responsive Design","text":""},{"location":"guide/template-customization/#mobile-first-approach","title":"Mobile-First Approach","text":"<pre><code>/* Mobile styles (default) */\n.container {\n  padding: 0 1rem;\n  max-width: 100%;\n}\n\n.grid {\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: 1fr;\n}\n\n/* Tablet styles */\n@media (min-width: 768px) {\n  .container {\n    padding: 0 2rem;\n    max-width: 768px;\n    margin: 0 auto;\n  }\n\n  .grid {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 2rem;\n  }\n}\n\n/* Desktop styles */\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n\n  .grid {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n/* Large desktop */\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1200px;\n  }\n}\n</code></pre>"},{"location":"guide/template-customization/#theme-customization","title":"Theme Customization","text":""},{"location":"guide/template-customization/#dark-mode-support","title":"Dark Mode Support","text":"<pre><code>/* Dark mode variables */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --text-color: #f9fafb;\n    --bg-color: #111827;\n    --primary-color: #3b82f6;\n    --secondary-color: #6b7280;\n  }\n}\n\n/* Dark mode toggle */\n.theme-toggle {\n  background: none;\n  border: 1px solid var(--text-color);\n  color: var(--text-color);\n  padding: 0.5rem;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n[data-theme=\"dark\"] {\n  --text-color: #f9fafb;\n  --bg-color: #111827;\n  --primary-color: #3b82f6;\n}\n</code></pre>"},{"location":"guide/template-customization/#custom-color-schemes","title":"Custom Color Schemes","text":"<pre><code>/* Blue theme */\n.theme-blue {\n  --primary-color: #2563eb;\n  --secondary-color: #1e40af;\n  --accent-color: #3b82f6;\n}\n\n/* Green theme */\n.theme-green {\n  --primary-color: #059669;\n  --secondary-color: #047857;\n  --accent-color: #10b981;\n}\n\n/* Purple theme */\n.theme-purple {\n  --primary-color: #7c3aed;\n  --secondary-color: #6d28d9;\n  --accent-color: #8b5cf6;\n}\n</code></pre>"},{"location":"guide/template-customization/#performance-optimization","title":"Performance Optimization","text":""},{"location":"guide/template-customization/#css-optimization","title":"CSS Optimization","text":"<pre><code>/* Critical CSS - inline in head */\n.header, .hero, .main-content {\n  /* Critical styles here */\n}\n\n/* Non-critical CSS - load async */\n@import url('non-critical.css') print;\n</code></pre>"},{"location":"guide/template-customization/#image-optimization","title":"Image Optimization","text":"<pre><code>&lt;!-- Responsive images --&gt;\n&lt;picture&gt;\n  &lt;source media=\"(min-width: 768px)\" srcset=\"{% image image fill-800x400 %}.webp\"&gt;\n  &lt;source media=\"(min-width: 768px)\" srcset=\"{% image image fill-800x400 %}\"&gt;\n  &lt;source srcset=\"{% image image fill-400x200 %}.webp\"&gt;\n  &lt;img src=\"{% image image fill-400x200 %}\" alt=\"{{ image.title }}\" loading=\"lazy\"&gt;\n&lt;/picture&gt;\n</code></pre>"},{"location":"guide/template-customization/#best-practices","title":"Best Practices","text":""},{"location":"guide/template-customization/#1-maintainable-css","title":"1. Maintainable CSS","text":"<ul> <li>Gunakan BEM methodology</li> <li>Organize CSS dalam modules</li> <li>Use CSS custom properties</li> <li>Implement consistent naming</li> </ul>"},{"location":"guide/template-customization/#2-accessible-design","title":"2. Accessible Design","text":"<ul> <li>Proper color contrast</li> <li>Keyboard navigation support</li> <li>Screen reader compatibility</li> <li>Focus indicators</li> </ul>"},{"location":"guide/template-customization/#3-performance","title":"3. Performance","text":"<ul> <li>Minimize CSS/JS files</li> <li>Optimize images</li> <li>Use lazy loading</li> <li>Implement caching</li> </ul>"},{"location":"guide/template-customization/#4-browser-compatibility","title":"4. Browser Compatibility","text":"<ul> <li>Test di multiple browsers</li> <li>Use progressive enhancement</li> <li>Provide fallbacks</li> <li>Validate HTML/CSS</li> </ul>"},{"location":"guide/template-customization/#tools-dan-workflow","title":"Tools dan Workflow","text":""},{"location":"guide/template-customization/#build-tools","title":"Build Tools","text":"<pre><code>// package.json\n{\n  \"scripts\": {\n    \"build\": \"npm run build:css &amp;&amp; npm run build:js\",\n    \"build:css\": \"sass src/scss:static/css --style compressed\",\n    \"build:js\": \"webpack --mode production\",\n    \"watch\": \"npm run watch:css &amp; npm run watch:js\",\n    \"watch:css\": \"sass src/scss:static/css --watch\",\n    \"watch:js\": \"webpack --mode development --watch\"\n  }\n}\n</code></pre>"},{"location":"guide/template-customization/#scss-setup","title":"SCSS Setup","text":"<pre><code>// src/scss/main.scss\n@import 'abstracts/variables';\n@import 'abstracts/mixins';\n@import 'base/reset';\n@import 'base/typography';\n@import 'components/header';\n@import 'components/hero';\n@import 'pages/home';\n</code></pre>"},{"location":"guide/template-customization/#langkah-selanjutnya","title":"Langkah Selanjutnya","text":"<p>Setelah menguasai kustomisasi template, Anda dapat:</p> <ol> <li>Implementasi advanced features</li> <li>Optimasi performance</li> <li>Setup build pipeline</li> <li>Deploy ke production</li> </ol> <p>Untuk informasi lebih lanjut, lihat dokumentasi deployment.</p>"}]}